import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as l,o,c,a as n,b as a,d as t,e}from"./app-CavufwmA.js";const i="/notebook/assets/image-20220407211249850-BuVLAs9J.png",u="/notebook/assets/image-20220407211847918-DHUgTCqI.png",r="/notebook/assets/QQ20220407195734-16493383899362-UMCpqZCb.png",d="/notebook/assets/QQ20220407195338-16493383807361-FQEueJ0D.png",m="/notebook/assets/image-20220408221824913-B3G92rz5.png",v="/notebook/assets/image-20220412084942012-7LeEu2cJ.png",k="/notebook/assets/image-20220412093229140-Tww2kZ7m.png",g="/notebook/assets/image-20220412094032906-D0yLLwso.png",b="/notebook/assets/image-20220421101830928-BshWlwhq.png",h="/notebook/assets/image-20220421194737923-B5PLuCtT.png",f="/notebook/assets/image-20220421194951023-BBu7QLcL.png",_={},x=e('<h2 id="一-tomcat快速入门" tabindex="-1"><a class="header-anchor" href="#一-tomcat快速入门"><span>一 Tomcat快速入门</span></a></h2><h3 id="_1-web服务器" tabindex="-1"><a class="header-anchor" href="#_1-web服务器"><span>1. Web服务器</span></a></h3><p>常见的两种开发模型：</p><ul><li>C/S（Client/Server）客户/服务器模式：客户端 需要安装专⽤的客户端软件</li><li>B/S（Brower/Server）：建立在广域网的基础上</li></ul><p>Web服务器是运⾏及发布Web应⽤的容器，只有将开发的Web项⽬放置到该容器中，才能使⽹络中的所 有⽤户通过浏览器进⾏访问</p><p>开发Java Web应⽤所采⽤的服务器主要是与JSP/Servlet兼容的Web服务 器，⽐较常⽤的有Tomcat、Resin、JBoss、WebSphere 和 WebLogic 等</p><table><thead><tr><th>Web服务器</th><th>简介</th></tr></thead><tbody><tr><td>Tomcat</td><td>⼀个⼩型、轻量级的⽀持JSP和Servlet 技术的Web服务器（最流⾏、开发JSP应⽤的⾸选）</td></tr><tr><td>Resin</td><td>Resin是Caucho公司的产品，是⼀个⾮常流⾏的⽀持Servlet和JSP的服务器、速度⾮常快</td></tr><tr><td>JBoss</td><td>纯Java的EJB服务器、不包含Servlet和JSP的 Web容器，不过它可以和Tomcat完美结合</td></tr><tr><td>WebSphere</td><td>是IBM公司的产品，有多个系列，其中WebSphere Application Server 是基于Java 的应⽤环境</td></tr><tr><td>WebLogic</td><td>WebLogic 是BEA公司的产品（现在已经被Oracle收购）、同样有多个系列。<br>WebLogic ⽀持企业级的、多层次的和完全分布式的Web应⽤，并且服务器的配置简单、界⾯友好</td></tr></tbody></table><br><h3 id="_2-安装tomcat" tabindex="-1"><a class="header-anchor" href="#_2-安装tomcat"><span>2. 安装Tomcat</span></a></h3>',9),T={href:"https://tomcat.apache.org/",target:"_blank",rel:"noopener noreferrer"},q={href:"https://dlcdn.apache.org/tomcat/",target:"_blank",rel:"noopener noreferrer"},C={href:"https://archive.apache.org/dist/",target:"_blank",rel:"noopener noreferrer"},w=e(`<p>开源⼩型web服务器 ，完全免费，主要⽤于中⼩型web项⽬。常用版本：8.5 和 9.0</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
启动之前首先安装JDK并配置环境变量<span class="token variable"><span class="token variable">\`</span>JAVA_HOME<span class="token variable">\`</span></span>，

若希望Tomcat服务器可以在任意路径启动， 则需要配置环境变量<span class="token variable"><span class="token variable">\`</span>CATALINA_HOME<span class="token variable">\`</span></span> 

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
<span class="token comment"># Linux 下解压后，可能需要先赋予权限，如果配置了JAVA_HOME依然不能正常启动，</span>
<span class="token comment"># 则还需要在 bin目录 的catalina.sh中添加JAVA_HOME （如下；）</span>

<span class="token function">sudo</span> <span class="token function">vim</span> ./bin/catalina.sh

<span class="token builtin class-name">export</span> <span class="token assign-left variable">JAVA_HOME</span><span class="token operator">=</span>/usr/local/bin/jdk/jdk1.8.0_191

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_3-tomcat配置" tabindex="-1"><a class="header-anchor" href="#_3-tomcat配置"><span>3. Tomcat配置</span></a></h3>`,6),S={href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"},y=e(`<ul><li><p><strong>bin</strong>：该⽬录下存放的是⼆进制可执⾏⽂件（Windows下可通过该目录下的startup.bat启动Tomcat）</p></li><li><p><strong>conf</strong>：配置文件的⽬录、这个⽬录下有四个很重要的⽂件：</p><ul><li><code>server.xml</code>：配置整个服务器信息（主要的配置文件）</li><li><code>tomcat-users.xml</code>：存储tomcat⽤户的⽂件</li><li><code>web.xml</code>：部署描述符⽂件</li><li><code>context.xml</code>：对所有应⽤的统⼀配置（通常我们不会去配置它）</li></ul></li><li><p>lib：Tomcat的类库（⾥⾯是⼀⼤堆jar⽂件）</p></li><li><p>logs：⽇志⽂件目录，记录了Tomcat启动和关闭的信息</p></li><li><p>temp：存放Tomcat的临时⽂件</p></li><li><p><strong>webapps</strong>：存放web项⽬的⽬录，每个⽂件夹都是⼀个项⽬</p><p>其中ROOT是⼀个特殊的项⽬，在地址栏中没有给出项⽬⽬录时，对 应的就是ROOT项⽬</p></li><li><p>work：运⾏时⽣成的⽂件，最终运⾏的⽂件都在这⾥（通过webapps中的项⽬⽣成）</p></li></ul><br><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>
<span class="token comment">&lt;!-- 控制台编码：在conf文件夹下的logging.properties文件修改如下语句： 
	不推荐修改，使用UTF-8即可  --&gt;</span>
java.util.logging.ConsoleHandler.encoding = GBK  （UTF-8）

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>详见：</p><br><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>
<span class="token comment">&lt;!-- server.xml 常用配置： 端口、协议等 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8888<span class="token punctuation">&quot;</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>HTTP/1.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">connectionTimeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8443<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>
<span class="token comment">&lt;!-- conf/tomcat-users.xml文件用来配置管理Tomcat服务器的用户与权限 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>role</span> <span class="token attr-name">rolename</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager-gui<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span> 
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>user</span> <span class="token attr-name">username</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>admin<span class="token punctuation">&quot;</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>123456<span class="token punctuation">&quot;</span></span> <span class="token attr-name">roles</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>manager-gui<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>

访问地址：http://localhost:/manager

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="二-项目资源部署" tabindex="-1"><a class="header-anchor" href="#二-项目资源部署"><span>二 项目资源部署</span></a></h2><h3 id="_1-直接部署项目" tabindex="-1"><a class="header-anchor" href="#_1-直接部署项目"><span>1. 直接部署项目</span></a></h3><p>在tomcat中，最小的单元是应用，任何一个资源文件都必须属于某个应用（应用：tomcat的webapps下的一个目录）</p><p>所以，如果希望部署一个资源文件，那么就必须先设置一个应用，将该资源文件放置在该应用中。</p><br><figure><img src="`+i+'" alt="image-20220407211249850" tabindex="0" loading="lazy"><figcaption>image-20220407211249850</figcaption></figure><p>如图，Tomcat原本就包含了一些 项目， 例如 examples目录 就是代表一个 项目（或者说应用）</p><br><figure><img src="'+u+`" alt="image-20220407211847918" tabindex="0" loading="lazy"><figcaption>image-20220407211847918</figcaption></figure><br><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
<span class="token comment"># 示例：webapps下部署war项目</span>

<span class="token number">1</span>. 直接将war包放到 webapps 下

<span class="token number">2</span>. Tomcat 会 自动将其解压，无需我们进行额外的操作

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_2-使用虚拟映射" tabindex="-1"><a class="header-anchor" href="#_2-使用虚拟映射"><span>2. 使用虚拟映射</span></a></h3><p>正常情况下，我们部署资源需要将资源文件放置在webapps目录下，如果其他目录下，则需要配置虚拟映射关系</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
<span class="token comment"># 方式一：conf/Catalina/localhost目录下，新建一个xml文件（tomcat会解析该xml文件，形成一个应用）</span>

<span class="token comment"># xml文件的文件名会被tomcat解析成为应用名，xml文件中需要去配置应用的应用路径</span>

\`\`<span class="token variable"><span class="token variable">\`</span>xml
    <span class="token operator">&lt;</span>?xml <span class="token assign-left variable">version</span><span class="token operator">=</span><span class="token string">&quot;1.0&quot;</span> <span class="token assign-left variable">encoding</span><span class="token operator">=</span><span class="token string">&quot;UTF-8&quot;</span>?<span class="token operator">&gt;</span>
    <span class="token operator">&lt;</span>Context <span class="token assign-left variable">docBase</span><span class="token operator">=</span><span class="token string">&quot;D:/Temp/test1&quot;</span> /<span class="token operator">&gt;</span>
<span class="token variable">\`</span></span>\`\`

<span class="token comment"># 访问地址：http://localhost:8080/demo1/a.txt</span>


<span class="token comment"># 应用需要有两个属性，一个叫做应用名，一个叫做应用路径；</span>
<span class="token comment"># 在直接部署时，应用名其实就是目录的名字；应用路径其实就是 webapps路径 + 目录名）</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><figure><img src="`+r+'" alt="QQ20220407195734-16493383899362" tabindex="0" loading="lazy"><figcaption>QQ20220407195734-16493383899362</figcaption></figure><br><p><strong>总而言之，一定要知道该资源文件在硬盘中路径，才有后续</strong> 。</p><br><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>\n<span class="token comment"># 方式二： conf/server.xml中，在Host节点下配置一个Context节点</span>\n\n``<span class="token variable"><span class="token variable">`</span>xml\n	<span class="token operator">&lt;</span>Context <span class="token assign-left variable">path</span><span class="token operator">=</span><span class="token string">&quot;/demo2&quot;</span> <span class="token assign-left variable">docBase</span><span class="token operator">=</span><span class="token string">&quot;D:/Temp/test2&quot;</span> /<span class="token operator">&gt;</span>\n<span class="token variable">`</span></span>``\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="'+d+'" alt="QQ20220407195338-16493383807361" tabindex="0" loading="lazy"><figcaption>QQ20220407195338-16493383807361</figcaption></figure><p>无论直接部署还是虚拟映射，tomcat首先会解析网络路径中的应用名，将其转换成应用路径，拼接出后面的部分，拿到文件的绝对路径</p><br><h3 id="_3-默认应用和页面" tabindex="-1"><a class="header-anchor" href="#_3-默认应用和页面"><span>3. 默认应用和页面</span></a></h3><p><strong>设置默认监听端口</strong>：</p>',35),j={href:"https://www.jd.com",target:"_blank",rel:"noopener noreferrer"},P=e(`<p>其实不是没有使用端口号，而是使用的是当前协议的默认端口号。对于http协议来说，默认端口号是80 （HTTPS 443）</p><br><p>如果我们希望我们的tomcat服务器，在访问时，也不需要携带端口号，该如何做？</p><p><strong>tomcat需要去监听80端口号</strong>、修改配置文件 conf/server.xml</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>80<span class="token punctuation">&quot;</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>HTTP/1.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">connectionTimeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8443<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p><strong>设置默认应用</strong>：</p><p>在tomcat中，任何一个文件都归属于某个应用，如果在访问时发现路径中没有应用名，只能当做默认应用处理</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token comment">/*
每当我们访问一个地址的时候，tomcat首先到 conf/Catalina/localhost目录下去察看有没有存在主目录或虚拟目录的xml文件

	如果有xml文件，就按xml里的路径进行访问，
	
	如果没有xml文件，就到server.xml文件里去察看是否配置context标签，
		如：&lt;Context path=&quot;&quot; docBase=&quot;D:/Temp/demo&quot; crossContext=&quot;true&quot;/&gt;
		
	  如果配置了context标签，则在conf/Catalina/localhost目录下生成一个对应的xml文件，
		以便于下次直接验证而不再访问server.xml，与此同时打开context里指定的路径，
		
	  如果server.xml里没有配置context标签，则返回访问错误页面。

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>默认应用最明显的特征是应用名是ROOT（但是访问时，直接把应用名直接忽略即可）</p>`,10),I={href:"http://localhost/hello.html",target:"_blank",rel:"noopener noreferrer"},W=e(`<p>如果我们希望访问资源文件时，也不带应用名，如何设置？</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
<span class="token number">1</span>. 将 webapps目录下的 ROOT项目 替换掉

<span class="token number">2</span>. 在 conf/Catalina/localhost下新建 ROOT.xml 文件

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p><strong>设置默认访问页面</strong>：</p><p>在没有写出具体的访问资源时，tomcat加载的就是默认访问页面</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.htm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,7),J={href:"http://localhost:8080",target:"_blank",rel:"noopener noreferrer"},A=e(`<br><p>例：通过ip地址直接访问到图片，如何设置？</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>
<span class="token comment">&lt;!-- 1. conf/server.xml 文件中修改端口号 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Connector</span> <span class="token attr-name">port</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>80<span class="token punctuation">&quot;</span></span> <span class="token attr-name">protocol</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>HTTP/1.1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">connectionTimeout</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>20000<span class="token punctuation">&quot;</span></span> <span class="token attr-name">redirectPort</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>8443<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>


<span class="token comment">&lt;!-- 2. conf\\Catalina\\localhost 下新建 ROOT.xml, 内容如下：表示将 demo 作为默认的ROOT应用 --&gt;</span>

<span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Context</span> <span class="token attr-name">docBase</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>D:/Temp/demo<span class="token punctuation">&quot;</span></span> <span class="token punctuation">/&gt;</span></span>


<span class="token comment">&lt;!-- 3. conf/web.xml 文件末尾修改 添加 welcome-file --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.html<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.htm<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>index.jsp<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>welcome-file</span><span class="token punctuation">&gt;</span></span>a.jpg<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>welcome-file-list</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><figure><img src="`+m+`" alt="image-20220408221824913" tabindex="0" loading="lazy"><figcaption>image-20220408221824913</figcaption></figure><br><h2 id="三-tomcat总体架构" tabindex="-1"><a class="header-anchor" href="#三-tomcat总体架构"><span>三 Tomcat总体架构</span></a></h2><h3 id="_1-连接器和容器" tabindex="-1"><a class="header-anchor" href="#_1-连接器和容器"><span>1. 连接器和容器</span></a></h3><p>HTTP服务器接收到请求之后把请求交给Servlet容器来处理，Servlet容器通过Servlet接口调用业务类。</p><p>servlet接口和Servlet容器这一整套内容叫作Servlet规范。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">/*

注意: Tomcat既按照Servlet规范的要求去实现了Servlet容器，同时它也具有HTTP服务器的功能。

即 Tomcat 有两个重要身份：

	1) 首先它是一个http服务器

	2) Tomcat同时也是一个Servlet容器

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+v+`" alt="image-20220412084942012" tabindex="0" loading="lazy"><figcaption>image-20220412084942012</figcaption></figure><p>Tomcat 设计了两个核心组件连接器(Connector)和容器(Container)来完成Tomcat 的两大核心功能。</p><p>连接器，负责对外交流：处理Socket连接，负责网络字节流与Request和Response对象的转化;</p><p>容器，负责内部处理︰加载和管理Servlet，以及具体处理Request请求</p><br><h3 id="_2-连接器组件coyote" tabindex="-1"><a class="header-anchor" href="#_2-连接器组件coyote"><span>2. 连接器组件Coyote</span></a></h3><p>Coyote 是Tomcat 中连接器的组件名称，是对外的接口。客户端通过Coyote与服务器建立连接、发送请求并接受响应。</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">/*
(1) Coyote封装了底层的网络通信(Socket请求及响应处理)

(2) Coyote使Catalina容器（容器组件）与具体的请求协议及 IO操作方式完全解耦

(3) Coyote将Socket输入转换封装为Request对象，进一步封装后交由Catalina容器进行处理，处理请求完成后,
    catalina通过Coyote提供的Response对象将结果写入输出流
    
(4) Coyote负责的是具体协议（应用层) 和 IO(传输层)相关内容

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><figure><img src="`+k+'" alt="image-20220412093229140" tabindex="0" loading="lazy"><figcaption>image-20220412093229140</figcaption></figure><br><table><thead><tr><th>组件</th><th>作用描述</th></tr></thead><tbody><tr><td>EndPoint</td><td>EndPoint是 Coyote通信端点，即通信监听的接口，是具体Socket接收和发送处理器，是对传输层的抽象，因此EndPoint用来实现TCP/IP协议的</td></tr><tr><td>Processor</td><td>Processor 是Coyote协议处理接口，如果说EndPoint是用来实现TCP/IP协议的，那么Processor用来实现HTTP协议，Processor接收来自EndPoint的Socket，读取字节流解析成Tomcat Request和Response对象，并通过Adapter将其提交到容器处理，Processor是对应用层协议的抽象</td></tr><tr><td>ProtocolHandler</td><td>Coyote协议接口，通过Endpoint和 Processor ，实现针对具体协议的处理能力。Tomcat按照协议和I/O提供了6个实现类︰AjpNioProtocol ，AjpAprProtocol, AjpNio2Protocol , Http11NioProtocol , Http11Nio2Protocol ,Http11AprProtocol</td></tr><tr><td>Adapter</td><td>由于协议不同，客户端发过来的请求信息也不尽相同，Tomcat定义了自己的Request类来封装这些请求信息。ProtocolHandler接口负责解析请求并生成Tomcat Request类。但是这个Request对象不是标准的ServletRequest，不能用Tomcat Request作为参数来调用容器。Tomcat设计者的解决方案是引入CoyoteAdapter，这是适配器模式的经典运用，连接器调用CoyoteAdapter的Sevice方法，传入的是Tomcat Request对象，CoyoteAdapter负责将Tomcat Request转成ServletAequest，再调用容器</td></tr></tbody></table><br><h3 id="_3-容器组件catalina" tabindex="-1"><a class="header-anchor" href="#_3-容器组件catalina"><span>3. 容器组件Catalina</span></a></h3><p>Tomcat模块分层结构图及Catalina的地位：</p><p>Tomcat是一个由一系列可配置的组件构成的Web容器，而Catalina是Tomcat的servlet容器。</p><p>从另一个角度来说，Tomcat 本质上就是一款Servlet容器，因为Catalina才是Tomcat 的核心，其他模块都是为Catalina提供支撑的。</p><p>比如︰通过Coyote模块提供链接通信，Jasper模块提供JSP引擎，Naming提供JNDI服务，Juli提供日志服务。</p><figure><img src="'+g+'" alt="image-20220412094032906" tabindex="0" loading="lazy"><figcaption>image-20220412094032906</figcaption></figure><br><p><strong>Servlet容器Catalina的结构</strong>：</p><figure><img src="'+b+`" alt="image-20220421101830928" tabindex="0" loading="lazy"><figcaption>image-20220421101830928</figcaption></figure><p>一般可以认为整个Tomcat就是一个Catalina实例，Tomcat启动的时候会初始化这个实例，Catalina实例通过加载server.xml完成其他实例的创建，创建并管理（1个）Server，Server创建并管理多个服务，每个服务又可以有多个Connector和一个Container。</p><ul><li><p>Catalina</p><p>负责解析Tomcat的配置文件，以此来创建服务器Server组件并进行管理</p></li><li><p>Server</p><p>服务器表示整个Catalina Servlet容器以及其它组件，负责组装并启动Servlaet引擎,Tomcat连接器。</p><p>Server通过实现Lifecycle接口，提供了一种优雅的启动和关闭整个系统的方式</p></li><li><p>service</p><p>服务是Server内部的组件，一个Server包含多个Service。它将若干个Connector组件绑定到一个Container.</p></li><li><p>Container</p><p>容器，负责处理用户的servlet请求，并返回对象给web用户的模块</p></li></ul><br><p><strong>Container组件的具体结构</strong>：</p><p>Container组件下有几种具体的组件，分别是 Engine、Host、Context和Wrapper。这4种组件（容器）是父子关系。</p><p>Tomcat通过一种分层的架构，使得Servlet容器具有很好的灵活性。</p><ul><li><p>Engine</p><p>表示整个Catalina的Servlet引擎，用来管理多个虚拟站点，一个Service最多只能有一个Engine，但是一个引擎可包含多个Host</p></li><li><p>Host</p><p>代表一个虚拟主机，或者说一个站点，可以给Tomcat配置多个虚拟主机地址，而一个虚拟主机下可包含多个Context</p></li><li><p>Context</p><p>表示一个Web应用程序，一个Web应用可包含多个Wrapper</p></li><li><p>Wrapper</p><p>表示一个Servlet，Wrapper作为容器中的最底层，不能包含子容器上述组件的配置其实就体现在<code>conf/server.xml</code>中</p></li></ul><br><h3 id="_4-请求处理流程" tabindex="-1"><a class="header-anchor" href="#_4-请求处理流程"><span>4. 请求处理流程</span></a></h3><p>Tomcat请求处理流程总结：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
<span class="token number">1</span>. 浏览器地址栏输入网址，首先进行域名解析，其次进行TCP连接，发起HTTP请求

<span class="token number">2</span>. HTTP请求到达目标机器，HTTP请求报文会被监听8080端口号的Connector接收到，
   将其解析转换成request对象，同时还会提供一个response对象

<span class="token number">3</span>. Connector将这两个对象传给engine，engine进一步将这两个对象传给host

<span class="token number">4</span>. host会根据请求的资源路径，匹配一个Context应用（tomcat启动时，会将应用解析，形成映射关系），
   根据请求资源路径中的 <span class="token variable"><span class="token variable">\`</span>应用名<span class="token variable">\`</span></span>，去寻找应用，找到则将这两个对象进一步传给该应用

<span class="token number">5</span>. 该应用拿到有效路径，会将应用的路径和该路径进行拼接，形成硬盘上的绝对路径，再查找该文件是否存在，
   如果存在，则往response里面写入文件的数据，以及写入200状态码；
   如果文件不存在，则写入404状态码

<span class="token number">6</span>. 最终程序返回，最终Connector读取response里面的数据，生成HTTP响应报文

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="四-tomcat源码剖析" tabindex="-1"><a class="header-anchor" href="#四-tomcat源码剖析"><span>四 Tomcat源码剖析</span></a></h2><h3 id="_1-构建tomcat源码" tabindex="-1"><a class="header-anchor" href="#_1-构建tomcat源码"><span>1. 构建Tomcat源码</span></a></h3><p>先去tomcat官网下载源码（这里选择的版本是8）</p>`,48),O={href:"https://tomcat.apache.org/download-80.cgi",target:"_blank",rel:"noopener noreferrer"},H=n("br",null,null,-1),R=n("p",null,[n("strong",null,"Maven和Ant"),a(" —— 两种构建Tomcat源码的方式：")],-1),B=n("p",null,"通过ant进行构建 （需要下载 1.9.8以上版本）",-1),E={href:"https://ant.apache.org/bindownload.cgi",target:"_blank",rel:"noopener noreferrer"},D=n("li",null,[n("p",null,"转换为maven的项目进行构建")],-1),L=e(`<br><p>下面主要介绍maven构建的方式：</p><ol><li>将源码导入idea中 并在根目录创建pom.xml 和catalina_home目录</li></ol><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code>
<span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>apache-tomcat-8.5.50-src<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>Tomcat8.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>8.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">&gt;</span></span>
        <span class="token comment">&lt;!--指定源目录--&gt;</span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>finalName</span><span class="token punctuation">&gt;</span></span>Tomcat8.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>finalName</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sourceDirectory</span><span class="token punctuation">&gt;</span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sourceDirectory</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resources</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>resource</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>directory</span><span class="token punctuation">&gt;</span></span>java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>directory</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resource</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>resources</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">&gt;</span></span>
            <span class="token comment">&lt;!--引入编译插件--&gt;</span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>maven-compiler-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>encoding</span><span class="token punctuation">&gt;</span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>encoding</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>source</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>source</span><span class="token punctuation">&gt;</span></span>
                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>target</span><span class="token punctuation">&gt;</span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>target</span><span class="token punctuation">&gt;</span></span>
                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!--tomcat 依赖的基础包--&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.easymock<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>easymock<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>3.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>ant<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ant<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.7.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>wsdl4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>wsdl4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.6.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>jaxrpc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.eclipse.jdt.core.compiler<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>ecj<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.5.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>javax.xml.soap<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>javax.xml.soap-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>1.4.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>再pom.xml文件上右击，选择 <code>add as maven project</code> ，转化为maven工程项目</p><br><ol start="2"><li>配置启动类、添加一些VM运行参数。主要是构建项目的目标路径 catalina-home相关内容</li></ol><figure><img src="`+h+`" alt="image-20220421194737923" tabindex="0" loading="lazy"><figcaption>image-20220421194737923</figcaption></figure><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
<span class="token parameter variable">-Dcatalina.home</span><span class="token operator">=</span>catalina-home
<span class="token parameter variable">-Dcatalina.base</span><span class="token operator">=</span>catalina-home
<span class="token parameter variable">-Djava.endorsed.dirs</span><span class="token operator">=</span>catalina-home/endorsed
<span class="token parameter variable">-Djava.io.tmpdir</span><span class="token operator">=</span>catalina-home/temp
<span class="token parameter variable">-Djava.util.logging.manager</span><span class="token operator">=</span>org.apache.juli.ClassLoaderLogManager
<span class="token parameter variable">-Djava.util.logging.config.file</span><span class="token operator">=</span>catalina-home/conf/logging.properties
<span class="token parameter variable">-Dfile.encoding</span><span class="token operator">=</span>UTF-8

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时将Tomcat项目的 webapps 和 conf 目录 复制到 catalina-home 目录下</p><br><ol start="3"><li>添加 JSP解析器初始化代码后，执行maven clean 、install</li></ol><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token comment">// JSP解析器初始化 （org.apache.catalina.startup.ContextConfig类的configureStart() 方法下）</span>

context<span class="token punctuation">.</span><span class="token function">addServletContainerInitializer</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JasperInitializer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+f+`" alt="image-20220421194951023" tabindex="0" loading="lazy"><figcaption>image-20220421194951023</figcaption></figure><br><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>
一些不必要的设置（可以减少一些项目启动报错信息）：

<span class="token number">1</span>. 修改： catalina-home/conf/catalina.properties  <span class="token punctuation">(</span> 添加 *.jar <span class="token punctuation">)</span>

	<span class="token assign-left variable">tomcat.util.scan.StandardJarScanFilter.jarsToSkip</span><span class="token operator">=</span>*.jar,<span class="token punctuation">\\</span>
	
<span class="token number">2</span>. 在 catalina-home 下新建一个 lib 目录

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br>`,17),z={href:"http://localhost:8080/",target:"_blank",rel:"noopener noreferrer"},M=n("br",null,null,-1),N=n("h3",{id:"_2-tomcat启动流程",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_2-tomcat启动流程"},[n("span",null,"2. Tomcat启动流程")])],-1),Q=n("br",null,null,-1),V=n("h3",{id:"_3-请求处理机制分析",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_3-请求处理机制分析"},[n("span",null,"3. 请求处理机制分析")])],-1);function U(F,Z){const s=l("ExternalLinkIcon");return o(),c("div",null,[x,n("p",null,[a("Tomcat官网："),n("a",T,[a("https://tomcat.apache.org/"),t(s)]),a(" 、"),n("a",q,[a("https://dlcdn.apache.org/tomcat/"),t(s)])]),n("p",null,[a("包含老版本的Tomcat下载地址："),n("a",C,[a("https://archive.apache.org/dist/"),t(s)])]),w,n("p",null,[a("Tomcat的⽬录简介： （ 通过url访问服务器示例: "),n("a",S,[a("http://localhost:8080"),t(s)]),a(" ）")]),y,n("p",null,[a("当我们访问 "),n("a",j,[a("https://www.jd.com"),t(s)]),a(" 类似的网站时，并没有端口号 ，为什么请求会成功呢？")]),P,n("p",null,[a("例如：如果ROOT应用下有一个hello.html，那么访问时通过"),n("a",I,[a("http://localhost/hello.html"),t(s)]),a(", 不需要去携带应用名。")]),W,n("p",null,[a("通过以上说明，我们明白了为什么启动Tomcat后，使用"),n("a",J,[a("http://localhost:8080"),t(s)]),a(" 访问到的页面是哪儿来的了")]),A,n("p",null,[a("sourceCode下载 地址为："),n("a",O,[a("https://tomcat.apache.org/download-80.cgi"),t(s)])]),H,R,n("ul",null,[n("li",null,[B,n("p",null,[a("下载 ant ："),n("a",E,[a("https://ant.apache.org/bindownload.cgi"),t(s)]),a(" （解压配置环境变量即可）")])]),D]),L,n("p",null,[a("启动项目、访问 ："),n("a",z,[a("http://localhost:8080/"),t(s)])]),M,N,Q,V])}const X=p(_,[["render",U],["__file","tomcat.html.vue"]]),Y=JSON.parse('{"path":"/java/Javaee/tomcat.html","title":"Tomcat","lang":"en-US","frontmatter":{"order":30,"title":"Tomcat","shortTitle":"Tomcat","description":"一 Tomcat快速入门 1. Web服务器 常见的两种开发模型： C/S（Client/Server）客户/服务器模式：客户端 需要安装专⽤的客户端软件 B/S（Brower/Server）：建立在广域网的基础上 Web服务器是运⾏及发布Web应⽤的容器，只有将开发的Web项⽬放置到该容器中，才能使⽹络中的所 有⽤户通过浏览器进⾏访问 开发Java ...","head":[["meta",{"property":"og:url","content":"https://x.app/notebook/java/Javaee/tomcat.html"}],["meta",{"property":"og:site_name","content":"Notebook"}],["meta",{"property":"og:title","content":"Tomcat"}],["meta",{"property":"og:description","content":"一 Tomcat快速入门 1. Web服务器 常见的两种开发模型： C/S（Client/Server）客户/服务器模式：客户端 需要安装专⽤的客户端软件 B/S（Brower/Server）：建立在广域网的基础上 Web服务器是运⾏及发布Web应⽤的容器，只有将开发的Web项⽬放置到该容器中，才能使⽹络中的所 有⽤户通过浏览器进⾏访问 开发Java ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-15T09:06:58.000Z"}],["meta",{"property":"article:author","content":"Mr.Topple"}],["meta",{"property":"article:modified_time","content":"2024-04-15T09:06:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Tomcat\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-15T09:06:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Topple\\",\\"url\\":\\"https://www.baidu.com\\"}]}"]]},"headers":[{"level":2,"title":"一 Tomcat快速入门","slug":"一-tomcat快速入门","link":"#一-tomcat快速入门","children":[{"level":3,"title":"1. Web服务器","slug":"_1-web服务器","link":"#_1-web服务器","children":[]},{"level":3,"title":"2. 安装Tomcat","slug":"_2-安装tomcat","link":"#_2-安装tomcat","children":[]},{"level":3,"title":"3. Tomcat配置","slug":"_3-tomcat配置","link":"#_3-tomcat配置","children":[]}]},{"level":2,"title":"二 项目资源部署","slug":"二-项目资源部署","link":"#二-项目资源部署","children":[{"level":3,"title":"1. 直接部署项目","slug":"_1-直接部署项目","link":"#_1-直接部署项目","children":[]},{"level":3,"title":"2. 使用虚拟映射","slug":"_2-使用虚拟映射","link":"#_2-使用虚拟映射","children":[]},{"level":3,"title":"3. 默认应用和页面","slug":"_3-默认应用和页面","link":"#_3-默认应用和页面","children":[]}]},{"level":2,"title":"三 Tomcat总体架构","slug":"三-tomcat总体架构","link":"#三-tomcat总体架构","children":[{"level":3,"title":"1. 连接器和容器","slug":"_1-连接器和容器","link":"#_1-连接器和容器","children":[]},{"level":3,"title":"2. 连接器组件Coyote","slug":"_2-连接器组件coyote","link":"#_2-连接器组件coyote","children":[]},{"level":3,"title":"3. 容器组件Catalina","slug":"_3-容器组件catalina","link":"#_3-容器组件catalina","children":[]},{"level":3,"title":"4. 请求处理流程","slug":"_4-请求处理流程","link":"#_4-请求处理流程","children":[]}]},{"level":2,"title":"四 Tomcat源码剖析","slug":"四-tomcat源码剖析","link":"#四-tomcat源码剖析","children":[{"level":3,"title":"1. 构建Tomcat源码","slug":"_1-构建tomcat源码","link":"#_1-构建tomcat源码","children":[]},{"level":3,"title":"2. Tomcat启动流程","slug":"_2-tomcat启动流程","link":"#_2-tomcat启动流程","children":[]},{"level":3,"title":"3. 请求处理机制分析","slug":"_3-请求处理机制分析","link":"#_3-请求处理机制分析","children":[]}]}],"git":{"createdTime":1713172018000,"updatedTime":1713172018000,"contributors":[{"name":"Neil","email":"msdrizzle@outlook.com","commits":1}]},"readingTime":{"minutes":13.48,"words":4043},"filePathRelative":"java/Javaee/tomcat.md","localizedDate":"April 15, 2024","autoDesc":true}');export{X as comp,Y as data};
