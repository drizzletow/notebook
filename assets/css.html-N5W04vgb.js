import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-BmKeAxq8.js";const e={},p=t(`<h2 id="css基础和样式" tabindex="-1"><a class="header-anchor" href="#css基础和样式"><span>CSS基础和样式</span></a></h2><h3 id="书写规范及注释" tabindex="-1"><a class="header-anchor" href="#书写规范及注释"><span>书写规范及注释</span></a></h3><ol><li><strong>属性名与值全部小写</strong>：CSS中标签名、属性名和属性值都使用小写。</li><li><strong>属性名和属性值之间保留一个空格</strong>：如<code>color: red;</code>。</li><li><strong>语句结尾加分号</strong>：每条CSS语句的结尾加分号，即使是最后一条规则。</li><li><strong>缩进与对齐</strong>：用两个或四个空格进行缩进，确保代码结构清晰。</li></ol><p><strong>注释</strong>：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 这是单行注释 */</span>
<span class="token selector">p</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token comment">/* 行内注释 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/*
 * 这是多行注释，
 * 可以分为几行
 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="样式表分类" tabindex="-1"><a class="header-anchor" href="#样式表分类"><span>样式表分类</span></a></h3><ul><li><p><strong>内联样式表（Inline CSS）</strong>：<br> 直接在HTML元素的<code>style</code>属性中写CSS。优点是简单，不用替换文件；缺点是可维护性差，不易复用。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span> <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>这是一个段落。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p><strong>内部样式表（Internal CSS）</strong>：<br> 在HTML文件的<code>&lt;style&gt;</code>标签中书写CSS。适用于单独页面的样式定义。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">&gt;</span></span><span class="token style"><span class="token language-css">
  <span class="token selector">p</span> <span class="token punctuation">{</span>
      <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
      <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>外部样式表（External CSS）</strong>：<br> 在单独的CSS文件中书写，然后通过HTML的<code>&lt;link&gt;</code>标签引用。适用于多个页面共享样式。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token comment">&lt;!-- HTML 文件 --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>stylesheet<span class="token punctuation">&quot;</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>styles.css<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>

/* styles.css 文件 */
p {
    color: blue;
    font-size: 16px;
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p><strong>注意事项</strong>：</p><ul><li>优先在项目中使用外部样式表以提高代码复用性和可维护性。</li><li>内部样式表适用于单页面快速开发和测试。</li><li>内联样式应尽量避免，以保持HTML的整洁和可读性。</li></ul><h3 id="常用样式介绍" tabindex="-1"><a class="header-anchor" href="#常用样式介绍"><span>常用样式介绍</span></a></h3><ul><li><strong>颜色（Color）</strong>：<code>color</code>用来设置文本颜色，<code>background-color</code>用来设置背景颜色。</li><li><strong>字体（Font）</strong>：<code>font-family</code>用来设置字体，<code>font-size</code>用来设置字体大小，<code>font-weight</code>用来设置字体粗细。</li><li><strong>文本（Text）</strong>：<code>text-align</code>用来设置文本对齐方式，<code>text-decoration</code>用来设置文本装饰，<code>line-height</code>用来设置行高。</li><li><strong>页面布局（Layout）</strong>：<code>display</code>用来设置元素显示方式，<code>position</code>用来设置元素定位方式，<code>margin</code>用来设置外边距，<code>padding</code>用来设置内边距。</li><li><strong>边框（Border）</strong>：<code>border-width</code>用来设置边框宽度，<code>border-style</code>用来设置边框样式，<code>border-color</code>用来设置边框颜色。</li></ul><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 设置段落样式 */</span>
<span class="token selector">p</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span> <span class="token comment">/* 字体颜色 */</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span> <span class="token comment">/* 字体大小 */</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5<span class="token punctuation">;</span> <span class="token comment">/* 行高 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 设置容器样式 */</span>
<span class="token selector">.container</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 80%<span class="token punctuation">;</span> <span class="token comment">/* 容器宽度 */</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span> <span class="token comment">/* 自动外边距（水平居中） */</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span> <span class="token comment">/* 内边距 */</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 2px solid black<span class="token punctuation">;</span> <span class="token comment">/* 边框 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="背景颜色和图片" tabindex="-1"><a class="header-anchor" href="#背景颜色和图片"><span>背景颜色和图片</span></a></h3><table><thead><tr><th>属性</th><th style="text-align:left;">作用</th><th style="text-align:left;">（常用）值</th></tr></thead><tbody><tr><td><code>background-color</code></td><td style="text-align:left;">背景颜色</td><td style="text-align:left;">预定义的颜色值 / 十六进制 / RGB / RGBA</td></tr><tr><td><code>background-image</code></td><td style="text-align:left;">背景图片</td><td style="text-align:left;"><code>url(图片路径)</code></td></tr><tr><td><code>background-repeat</code></td><td style="text-align:left;">是否平铺 (复用)</td><td style="text-align:left;"><code>repeat</code> / <code>no-repeat</code> / <code>repeat-x</code> / <code>repeat-y</code></td></tr><tr><td><code>background-position</code></td><td style="text-align:left;">背景图片位置的起始位置</td><td style="text-align:left;"><code>length</code> / <code>position</code></td></tr><tr><td><code>background-attachment</code></td><td style="text-align:left;">背景固定还是滚动</td><td style="text-align:left;"><code>scroll</code> / <code>fixed</code></td></tr><tr><td><code>background</code></td><td style="text-align:left;">综合简写</td><td style="text-align:left;"><code>color url(图片路径) repeat attachment position;</code></td></tr></tbody></table><p>注: <strong>background-position</strong> 必须先指定<code>background-image</code>属性，常用于背景图片居中对齐。</p><h4 id="background-position-详细讲解" tabindex="-1"><a class="header-anchor" href="#background-position-详细讲解"><span><code>background-position</code> 详细讲解</span></a></h4><ul><li><code>position</code>语法：<code>background-position: &lt;horizontal&gt; &lt;vertical&gt;;</code></li><li>值可以是长度单位 (如 <code>px</code>, <code>em</code>), 或者方位名词 (如 <code>left</code>, <code>center</code>, <code>right</code>, <code>top</code>, <code>bottom</code>)</li></ul><p><strong>示例解释</strong>：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token property">background-position</span><span class="token punctuation">:</span> right top<span class="token punctuation">;</span>       <span class="token comment">/* 背景图片右上角对齐容器右上角 */</span>
<span class="token property">background-position</span><span class="token punctuation">:</span> center center<span class="token punctuation">;</span>   <span class="token comment">/* 背景图片居中对齐 */</span>
<span class="token property">background-position</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>           <span class="token comment">/* 背景图片水平靠右，垂直居中 */</span>
<span class="token property">background-position</span><span class="token punctuation">:</span> 10px 50px<span class="token punctuation">;</span>       <span class="token comment">/* 背景图片从容器左上角 10px 右移, 50px 下移 */</span>
<span class="token property">background-position</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>            <span class="token comment">/* 背景图片从容器左上角 10px 右移，垂直居中 */</span>
<span class="token property">background-position</span><span class="token punctuation">:</span> right 20px<span class="token punctuation">;</span>      <span class="token comment">/* 背景图片水平靠右，垂直移动 20px */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/*--- 背景颜色样式示例 ---*/</span>

<span class="token comment">/* 背景颜色设置 */</span>
<span class="token selector">.bg-color-example</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> #00aaff<span class="token punctuation">;</span> <span class="token comment">/* 十六进制颜色 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 背景图片设置 */</span>
<span class="token selector">.bg-image-example</span> <span class="token punctuation">{</span>
    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;background.jpg&#39;</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span> <span class="token comment">/* 背景图片 */</span>
    <span class="token property">background-repeat</span><span class="token punctuation">:</span> no-repeat<span class="token punctuation">;</span>   <span class="token comment">/* 不重复背景图片 */</span>
    <span class="token property">background-position</span><span class="token punctuation">:</span> center center<span class="token punctuation">;</span> <span class="token comment">/* 背景图片居中 */</span>
    <span class="token property">background-attachment</span><span class="token punctuation">:</span> fixed<span class="token punctuation">;</span>   <span class="token comment">/* 背景图片固定不滚动 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 背景透明设置 */</span>
<span class="token selector">.bg-transparent-example</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token function">rgba</span><span class="token punctuation">(</span>166<span class="token punctuation">,</span> 166<span class="token punctuation">,</span> 255<span class="token punctuation">,</span> 0.1<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 将背景颜色设为半透明 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 背景简写示例 */</span>
<span class="token selector">.bg-shortcut-example</span> <span class="token punctuation">{</span>
    <span class="token property">background</span><span class="token punctuation">:</span> #00aaff <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;background.jpg&#39;</span><span class="token punctuation">)</span></span> no-repeat fixed center<span class="token punctuation">;</span> <span class="token comment">/* 背景简写 */</span>
    <span class="token comment">/* 同时使用背景颜色和背景图像时，背景颜色会在图片后面显示，图片加载完成后覆盖在颜色之上。 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="文本和字体样式" tabindex="-1"><a class="header-anchor" href="#文本和字体样式"><span>文本和字体样式</span></a></h3><h4 id="文本属性" tabindex="-1"><a class="header-anchor" href="#文本属性"><span>文本属性</span></a></h4><table><thead><tr><th style="text-align:left;">文本属性</th><th style="text-align:left;">表示</th><th style="text-align:left;">注意点</th></tr></thead><tbody><tr><td style="text-align:left;"><code>color</code></td><td style="text-align:left;">颜色</td><td style="text-align:left;">预定义的颜色值 / 十六进制 / RGB代码（常用十六进制，比如: <code>#fff</code>）</td></tr><tr><td style="text-align:left;"><code>line-height</code></td><td style="text-align:left;">行高</td><td style="text-align:left;">控制行与行之间的距离，通常以数字、百分比或长度单位表示</td></tr><tr><td style="text-align:left;"><code>text-align</code></td><td style="text-align:left;">水平对齐</td><td style="text-align:left;">可以设定文字水平的对齐方式（<code>left</code>、<code>center</code>、<code>right</code>、<code>justify</code>）</td></tr><tr><td style="text-align:left;"><code>text-indent</code></td><td style="text-align:left;">首行缩进</td><td style="text-align:left;">通常用于段落首行缩进，单位常用<code>em</code>（如 <code>text-indent: 2em;</code>）</td></tr><tr><td style="text-align:left;"><code>text-decoration</code></td><td style="text-align:left;">文本修饰</td><td style="text-align:left;">添加下划线 <code>underline</code> 、取消下划线 <code>none</code>，还可以设置<code>overline</code>和<code>line-through</code>等文本修饰</td></tr><tr><td style="text-align:left;"><code>text-transform</code></td><td style="text-align:left;">文本转换</td><td style="text-align:left;">控制文本转换为大写或小写 (<code>uppercase</code>、<code>lowercase</code>、<code>capitalize</code>)</td></tr></tbody></table><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 文本样式示例 */</span>
<span class="token selector">.text-style-example</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>          <span class="token comment">/* 十六进制颜色 */</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5<span class="token punctuation">;</span>     <span class="token comment">/* 行高 */</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> justify<span class="token punctuation">;</span>  <span class="token comment">/* 水平对齐方式 */</span>
    <span class="token property">text-indent</span><span class="token punctuation">:</span> 2em<span class="token punctuation">;</span>     <span class="token comment">/* 首行缩进 */</span>
    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span>   <span class="token comment">/* 下划线 */</span>
    <span class="token property">text-transform</span><span class="token punctuation">:</span> capitalize<span class="token punctuation">;</span>   <span class="token comment">/* 首字母大写 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="字体属性" tabindex="-1"><a class="header-anchor" href="#字体属性"><span>字体属性</span></a></h4><table><thead><tr><th style="text-align:left;">字体属性</th><th style="text-align:left;">表示</th><th style="text-align:left;">注意点</th></tr></thead><tbody><tr><td style="text-align:left;"><code>font-size</code></td><td style="text-align:left;">字号</td><td style="text-align:left;">我们通常用的单位是<code>px</code> (像素)，必须跟上单位</td></tr><tr><td style="text-align:left;"><code>font-family</code></td><td style="text-align:left;">字体</td><td style="text-align:left;">可以一次设置多个字体，浏览器不支持第一个字体，则会尝试下一个；字体名如果包含空格需加引号</td></tr><tr><td style="text-align:left;"><code>font-weight</code></td><td style="text-align:left;">字体粗细</td><td style="text-align:left;">加粗是 <code>700</code> 或者 <code>bold</code>，不加粗是 <code>normal</code> 或者 <code>400</code> (数字不要加单位)</td></tr><tr><td style="text-align:left;"><code>font-style</code></td><td style="text-align:left;">字体样式</td><td style="text-align:left;">倾斜是 <code>italic</code>，不倾斜是 <code>normal</code>（工作中最常用 <code>normal</code>）</td></tr><tr><td style="text-align:left;"><code>font</code></td><td style="text-align:left;">字体连写</td><td style="text-align:left;">1. 字体连写是有顺序的不能随意换位置，2. 其中字号和字体必须同时出现</td></tr></tbody></table><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 字体样式示例 */</span>
<span class="token selector">.font-style-example</span> <span class="token punctuation">{</span>
    <span class="token property">font-size</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>                   <span class="token comment">/* 字号 */</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&quot;Arial&quot;</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>  <span class="token comment">/* 字体 */</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>                 <span class="token comment">/* 字体粗细 */</span>
    <span class="token property">font-style</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>                <span class="token comment">/* 字体样式 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 字体连写示例 */</span>
<span class="token selector">.font-shorthand-example</span> <span class="token punctuation">{</span>
    <span class="token property">font</span><span class="token punctuation">:</span> italic bold 16px/1.5 <span class="token string">&quot;Arial&quot;</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>  <span class="token comment">/* 字体连写 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container info"><p class="hint-container-title">文本居中实现方式</p><ul><li><strong>水平居中</strong>：常用<code>text-align: center;</code>，也可使用Flexbox和Grid布局。</li><li><strong>垂直居中</strong>：方法较多，常用方法包括行高法、Table-cell法、Flexbox、Grid布局和绝对定位法。</li></ul><h3 id="水平居中" tabindex="-1"><a class="header-anchor" href="#水平居中"><span>水平居中</span></a></h3><h4 id="_1-使用-text-align" tabindex="-1"><a class="header-anchor" href="#_1-使用-text-align"><span>1. 使用 <code>text-align</code></span></a></h4><p><code>text-align:center;</code> 是文本水平居中的最常用方法，适用于块级元素中的文本。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.horizontal-center</span> <span class="token punctuation">{</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>horizontal-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是水平居中的文本。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-使用-flexbox" tabindex="-1"><a class="header-anchor" href="#_2-使用-flexbox"><span>2. 使用 Flexbox</span></a></h4><p>Flexbox 是一个强大的布局工具，也可以用于实现文本的水平居中。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.flex-horizontal-center</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex-horizontal-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是使用Flexbox实现水平居中的文本。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="垂直居中" tabindex="-1"><a class="header-anchor" href="#垂直居中"><span>垂直居中</span></a></h3><p>垂直居中通常比水平居中稍复杂，有几种常用的方法：</p><h4 id="_1-行高-line-height-法" tabindex="-1"><a class="header-anchor" href="#_1-行高-line-height-法"><span>1. 行高（Line Height）法</span></a></h4><p>这种方法适用于单行文本，通过将行高设置为元素的高度来实现。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.line-height-center</span> <span class="token punctuation">{</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span> <span class="token comment">/* 行高等于元素高度 */</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 可选，为了水平居中 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>line-height-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是使用行高实现垂直居中的文本。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_2-table-cell-法" tabindex="-1"><a class="header-anchor" href="#_2-table-cell-法"><span>2. Table-cell 法</span></a></h4><p>这个方法将父元素的 <code>display</code> 属性设为 <code>table</code>，将子元素的 <code>display</code> 属性设为 <code>table-cell</code>，然后使用 <code>vertical-align</code> 属性。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.table-cell-center</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> table<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token selector">.table-cell-center p</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> table-cell<span class="token punctuation">;</span>
    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>
    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 可选，为了水平居中 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>table-cell-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是使用Table-cell实现垂直居中的文本。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="_3-flexbox-法" tabindex="-1"><a class="header-anchor" href="#_3-flexbox-法"><span>3. Flexbox 法</span></a></h4><p>Flexbox 是实现垂直居中的强大方法之一。除了水平居中外，还可以实现垂直居中。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.flex-center</span> <span class="token punctuation">{</span>
    <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
    <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 水平居中 */</span>
    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>     <span class="token comment">/* 垂直居中 */</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">&gt;</span></span>这是使用Flexbox实现水平和垂直居中的文本。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="display属性" tabindex="-1"><a class="header-anchor" href="#display属性"><span>Display属性</span></a></h3><p>HTML标签一般分为块标签和行内标签两种类型，它们也称块元素和行内元素。</p><table><thead><tr><th>元素模式</th><th>元素排列</th><th>设置样式</th><th>默认宽度</th><th>包含</th></tr></thead><tbody><tr><td>块级元素</td><td>一行只能放一个块级元素</td><td>可以设置宽度高度</td><td>容器的100%</td><td>容器级可以包含任何标签</td></tr><tr><td>行内元素</td><td>一行可以放多个行内元素</td><td>不可以直接设置宽度高度</td><td>它本身内容的宽度</td><td>容纳文本或则其他行内元素</td></tr><tr><td>行内块元素</td><td>一行放多个行内块元素</td><td>可以设置宽度和高度</td><td>它本身内容的宽度</td><td></td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">Display属性</p><p><code>display</code> 属性用于定义元素的显示类型，它决定了元素在页面中的布局方式。常见的显示类型有：</p><ul><li><strong>block</strong>：块级元素，占据父元素的全部宽度。<br> 常见的块元素有<code>&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;</code>等，其中<code>&lt;div&gt;</code>标签是最典型的块元素。</li><li><strong>inline</strong>：内联元素，不会换行，只占据自身所需宽度。<br> 常见的行内元素有<code>&lt;a&gt;、&lt;strong&gt;、&lt;b&gt;、&lt;em&gt;、&lt;i&gt;、&lt;span&gt;</code>等，其中<code>&lt;span&gt;</code>标签最典型的行内元素。</li><li><strong>inline-block</strong>：内联块级元素，像内联元素那样排列，但其内容表现为块级。<br> 在行内元素中有几个特殊的标签——<code>&lt;img /&gt;、&lt;input /&gt;、&lt;td&gt;</code>，可以对它们设置宽高和对齐属性</li><li><strong>none</strong>：隐藏元素，不占空间。</li><li><strong>flex</strong> 和 <strong>grid</strong>：带有布局功能的复杂显示模式。</li></ul></div><h2 id="css选择器及权重" tabindex="-1"><a class="header-anchor" href="#css选择器及权重"><span>CSS选择器及权重</span></a></h2><h3 id="基础选择器" tabindex="-1"><a class="header-anchor" href="#基础选择器"><span>基础选择器</span></a></h3><p>基础选择器（Basic Selectors）：</p><ul><li><strong>通配符选择器（Universal Selector）</strong>：选择所有元素（<code>*</code>）。</li><li><strong>类型选择器（Type Selector）</strong>：也称为元素（标签）选择器，选择所有某一类型的元素（如<code>p</code>、<code>div</code>）。</li><li><strong>类选择器（Class Selector）</strong>：选择特定类名的所有元素（如<code>.classname</code>）。</li><li><strong>ID选择器（ID Selector）</strong>：选择特定ID的所有元素（如<code>#idname</code>）。</li><li><strong>属性选择器（Attribute Selector）</strong>：选择具有特定属性的元素（如<code>[type=&quot;text&quot;]</code>）。</li></ul><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 通配符选择器：设置所有元素的字体 */</span>
<span class="token selector">*</span> <span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> Arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 类型选择器(元素/标签选择器)：设置所有p元素的颜色 */</span>
<span class="token selector">p</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 类选择器：设置类名为example的元素的背景颜色 */</span>
<span class="token selector">.example</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* ID选择器：设置ID为header的元素的高度 */</span>
<span class="token selector">#header</span> <span class="token punctuation">{</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 属性选择器：设置所有type属性值为text的input元素的宽度 */</span>
<span class="token selector">input[type=&quot;text&quot;]</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="复合选择器" tabindex="-1"><a class="header-anchor" href="#复合选择器"><span>复合选择器</span></a></h3><p>复合选择器（Compound Selectors）：</p><ul><li><strong>后代选择器（Descendant Selector）</strong>：如选择div中的所有p元素（<code>div p</code>）。</li><li><strong>子选择器（Child Selector）</strong>：如选择div中的直接子元素p（<code>div &gt; p</code>）。</li><li><strong>相邻兄弟选择器（Adjacent Sibling Selector）</strong>：如选择紧接在h1之后的p元素（<code>h1 + p</code>）。</li><li><strong>通用兄弟选择器（General Sibling Selector）</strong>：如选择h1之后的所有p元素（<code>h1 ~ p</code>）。</li><li><strong>交集选择器 (Intersection Selector)</strong>：如选择同时具有class1和class2的元素（<code>.class1.class2</code>）</li><li><strong>并集选择器 (Union Selector)</strong>：如选择所有具有class1或class2类的元素（<code>.class1, .class2</code>）</li><li><strong>链接伪类选择器 (Link Pseudo-classes)</strong>：用于匹配链接的不同状态</li></ul><h4 id="后代选择器-descendant-selector" tabindex="-1"><a class="header-anchor" href="#后代选择器-descendant-selector"><span>后代选择器 (Descendant Selector)</span></a></h4><p>选择某元素后代中的特定元素。它可以匹配目标元素的所有后代元素。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 选择div中的所有p元素 */</span>
<span class="token selector">div p</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="子选择器-child-selector" tabindex="-1"><a class="header-anchor" href="#子选择器-child-selector"><span>子选择器 (Child Selector)</span></a></h4><p>选择某元素子代中的特定元素。它只匹配目标元素的直接子元素。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 选择div中的直接子元素p */</span>
<span class="token selector">div &gt; p</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="相邻兄弟选择器-adjacent-sibling-selector" tabindex="-1"><a class="header-anchor" href="#相邻兄弟选择器-adjacent-sibling-selector"><span>相邻兄弟选择器 (Adjacent Sibling Selector)</span></a></h4><p>选择紧接在某元素后的第一个兄弟元素。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 选择紧接在h1之后的p元素 */</span>
<span class="token selector">h1 + p</span> <span class="token punctuation">{</span>
    <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="通用兄弟选择器-general-sibling-selector" tabindex="-1"><a class="header-anchor" href="#通用兄弟选择器-general-sibling-selector"><span>通用兄弟选择器 (General Sibling Selector)</span></a></h4><p>选择某元素之后的所有兄弟元素。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 选择h1之后的所有p元素 */</span>
<span class="token selector">h1 ~ p</span> <span class="token punctuation">{</span>
    <span class="token property">font-style</span><span class="token punctuation">:</span> italic<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="交集选择器-intersection-selector" tabindex="-1"><a class="header-anchor" href="#交集选择器-intersection-selector"><span>交集选择器 (Intersection Selector)</span></a></h4><p>选择同时满足多个条件的元素。即一个元素需同时匹配多个选择器。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 选择同时具有class1和class2的元素 */</span>
<span class="token selector">.class1.class2</span> <span class="token punctuation">{</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> yellow<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>class1 class2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>交集选择器示例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>class1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>这不是交集选择器示例<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="并集选择器-union-selector" tabindex="-1"><a class="header-anchor" href="#并集选择器-union-selector"><span>并集选择器 (Union Selector)</span></a></h4><p>选择满足任意一个条件的元素。即匹配多个选择器中的任意一个选择器。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 选择所有具有class1或class2类的元素 */</span>
<span class="token selector">.class1, .class2</span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>class1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>并集选择器示例1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>class2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>并集选择器示例2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="链接伪类选择器-link-pseudo-classes" tabindex="-1"><a class="header-anchor" href="#链接伪类选择器-link-pseudo-classes"><span>链接伪类选择器 (Link Pseudo-classes)</span></a></h4><p>专用于链接的伪类选择器，用于控制链接的不同状态。</p><ul><li><code>:link</code>：尚未访问的链接。</li><li><code>:visited</code>：已访问的链接。</li><li><code>:hover</code>：鼠标悬停在链接上时。</li><li><code>:active</code>：点击激活的链接。</li></ul><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 尚未访问的链接 */</span>
<span class="token selector">a:link</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 已访问的链接 */</span>
<span class="token selector">a:visited</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> purple<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 鼠标悬停在链接上 */</span>
<span class="token selector">a:hover</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 点击激活的链接 */</span>
<span class="token selector">a:active</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>https://www.example.com<span class="token punctuation">&quot;</span></span> <span class="token attr-name">target</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>_blank<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>示例链接<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="选择器权重计算" tabindex="-1"><a class="header-anchor" href="#选择器权重计算"><span>选择器权重计算</span></a></h3><table><thead><tr><th>CSS三大特性</th><th>说明</th></tr></thead><tbody><tr><td>层叠性</td><td>一个属性通过两个相同选择器设置到同一个元素上（样式冲突），那么其中一个属性就会被另一个属性层叠掉（覆盖）。样式冲突遵循就近原则，即哪个样式近就执行哪个样式。如果样式不冲突，不会层叠。</td></tr><tr><td>继承性</td><td>子标签会继承父标签的某些样式（例如，<code>text-</code>、<code>font-</code>、<code>line-</code>这些开头的属性以及<code>color</code>属性可以继承）。</td></tr><tr><td>优先级</td><td>定义CSS样式时，经常出现两个或更多规则应用在同一元素上，此时若选择器相同，则执行层叠性；若选择器不同，就会出现优先级的问题。</td></tr></tbody></table><div class="hint-container info"><p class="hint-container-title">CSS权重计算公式</p><p>CSS Specificity（特殊性）的计算直接影响样式的最终应用。</p><table><thead><tr><th>选择器</th><th>权重公式</th></tr></thead><tbody><tr><td>继承选择器或全局选择器 <code>*</code></td><td><code>0, 0, 0, 0</code></td></tr><tr><td>元素（标签）选择器</td><td><code>0, 0, 0, 1</code></td></tr><tr><td>类选择器、伪类选择器(如<code>.class1</code>, <code>:hover</code> 等)</td><td><code>0, 0, 1, 0</code></td></tr><tr><td>属性选择器</td><td><code>0, 0, 1, 0</code></td></tr><tr><td>ID 选择器</td><td><code>0, 1, 0, 0</code></td></tr><tr><td>行内样式 <code>style=&quot;&quot;</code></td><td><code>1, 0, 0, 0</code></td></tr><tr><td><code>!important</code></td><td><code>∞</code>（无穷大）<br> 行内样式的 <code>!important</code> 权重最高</td></tr></tbody></table><ul><li>权重值从左到右依次递减，左边的数值更大，权重更高。</li><li>权重级别之间不可超越，不存在进位。</li></ul></div><p>多个基础选择器组合使用时，权重会叠加:</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 后代选择器 */</span>
<span class="token selector">div ul li</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>   <span class="token comment">/* 权重为 0, 0, 0, 3 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 类选择器与后代选择器的组合 */</span>
<span class="token selector">.nav ul li</span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid black<span class="token punctuation">;</span> <span class="token comment">/* 权重为 0, 0, 1, 2 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 伪类选择器 */</span>
<span class="token selector">a:hover</span> <span class="token punctuation">{</span>
    <span class="token property">text-decoration</span><span class="token punctuation">:</span> underline<span class="token punctuation">;</span> <span class="token comment">/* 权重为 0, 0, 1, 1 */</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 类选择器与标签选择器 */</span>
<span class="token selector">.nav a</span> <span class="token punctuation">{</span>
    <span class="token property">color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span> <span class="token comment">/* 权重为 0, 0, 1, 1 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>注意：数位之间没有进制关系，例如：<code>0, 0, 0, 5 + 0, 0, 0, 5 = 0, 0, 0, 10</code> 而不是 <code>0, 0, 1, 0</code>，不会存在10个 div 元素选择器的权重能超越一个类选择器权重的情况。</li></ul><div class="hint-container tip"><p class="hint-container-title">继承的权重为0</p><p>对于继承自父元素的样式，其权重为0。</p><ul><li>如果某标签的样式是通过选择器直接应用的，则需要按照上述权重公式计算。</li><li>如果某标签的样式是继承来的（未被任何选择器直接选中），其权重为0。</li></ul></div><p><strong>总结</strong>：</p><ul><li><strong>层叠性</strong>决定了同一选择器多次应用时，靠近元素的样式会覆盖之前的样式。</li><li><strong>继承性</strong>指某些特定属性可以从父元素继承给子元素，但继承的权重为0。</li><li><strong>优先级</strong>依靠权重计算公式，较高权重的选择器将覆盖较低权重的选择器。</li></ul><h2 id="盒模型-box-model" tabindex="-1"><a class="header-anchor" href="#盒模型-box-model"><span>盒模型(Box Model)</span></a></h2><h3 id="css盒模型" tabindex="-1"><a class="header-anchor" href="#css盒模型"><span>CSS盒模型</span></a></h3><p>CSS 盒模型描述了一个元素及其内容、内边距（padding）、边框（border）和外边距（margin）如何组合在一起。盒模型的组成部分主要包括：</p><ul><li><strong>Content（内容）</strong>：元素的实际内容（文本、图像等）。</li><li><strong>Padding（内边距）</strong>：围绕内容的空白区域。</li><li><strong>Border（边框）</strong>：围绕内边距（如果有）的边框。</li><li><strong>Margin（外边距）</strong>：最外层的外边距，围绕边框。</li></ul><img src="https://www.runoob.com/images/box-model.gif"><h3 id="margin-padding" tabindex="-1"><a class="header-anchor" href="#margin-padding"><span>Margin/Padding</span></a></h3><h4 id="内边距-padding" tabindex="-1"><a class="header-anchor" href="#内边距-padding"><span>内边距（Padding）</span></a></h4><p>内边距（Padding）控制的是元素内容与其边框（Border）之间的距离。</p><ol><li><p><strong>单边属性写法</strong></p><ul><li><code>padding-top</code>: 设置顶部内边距</li><li><code>padding-right</code>: 设置右侧内边距</li><li><code>padding-bottom</code>: 设置底部内边距</li><li><code>padding-left</code>: 设置左侧内边距</li></ul><p>示例：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.example-padding</span> <span class="token punctuation">{</span>
    <span class="token property">padding-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">padding-right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
    <span class="token property">padding-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">padding-left</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>简写形式</strong><br> 通过单行设置全部内边距，简写形式如下：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.example-padding</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> top right bottom left<span class="token punctuation">;</span> <span class="token comment">/* 顺序依次为 上 右 下 左 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体简写规则：</p><ul><li><strong>4个值</strong>：上，右，下，左</li><li><strong>3个值</strong>：上，左右，下</li><li><strong>2个值</strong>：上下，左右</li><li><strong>1个值</strong>：所有方向相同</li></ul><p>示例：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.example-padding</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 15px 20px 25px<span class="token punctuation">;</span> <span class="token comment">/* 上 10px, 右 15px, 下 20px, 左 25px */</span>
<span class="token punctuation">}</span>

<span class="token selector">.example-padding-1</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 15px 20px<span class="token punctuation">;</span> <span class="token comment">/* 上 10px, 左右 15px, 下 20px */</span>
<span class="token punctuation">}</span>

<span class="token selector">.example-padding-2</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 10px 15px<span class="token punctuation">;</span> <span class="token comment">/* 上下 10px, 左右 15px */</span>
<span class="token punctuation">}</span>

<span class="token selector">.example-padding-3</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 四边均为 10px */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="外边距-margin" tabindex="-1"><a class="header-anchor" href="#外边距-margin"><span>外边距（Margin）</span></a></h4><p>外边距（Margin）控制的是元素边框（Border）与相邻元素或容器边框之间的距离。</p><ol><li><p><strong>单边属性写法</strong></p><ul><li><code>margin-top</code>: 设置顶部外边距</li><li><code>margin-right</code>: 设置右侧外边距</li><li><code>margin-bottom</code>: 设置底部外边距</li><li><code>margin-left</code>: 设置左侧外边距</li></ul><p>示例：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.example-margin</span> <span class="token punctuation">{</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
    <span class="token property">margin-right</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>
    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">margin-left</span><span class="token punctuation">:</span> 25px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong>简写形式</strong><br> 通过单行设置全部外边距，简写形式如下：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.example-margin</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> top right bottom left<span class="token punctuation">;</span> <span class="token comment">/* 顺序依次为 上 右 下 左 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>具体简写规则：</p><ul><li><strong>4个值</strong>：上，右，下，左</li><li><strong>3个值</strong>：上，左右，下</li><li><strong>2个值</strong>：上下，左右</li><li><strong>1个值</strong>：所有方向相同</li></ul><p>示例：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.example-margin</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px 15px 20px 25px<span class="token punctuation">;</span> <span class="token comment">/* 上 10px, 右 15px, 下 20px, 左 25px */</span>
<span class="token punctuation">}</span>

<span class="token selector">.example-margin-1</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px 15px 20px<span class="token punctuation">;</span> <span class="token comment">/* 上 10px, 左右 15px, 下 20px */</span>
<span class="token punctuation">}</span>

<span class="token selector">.example-margin-2</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px 15px<span class="token punctuation">;</span> <span class="token comment">/* 上下 10px, 左右 15px */</span>
<span class="token punctuation">}</span>

<span class="token selector">.example-margin-3</span> <span class="token punctuation">{</span>
    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span> <span class="token comment">/* 四边均为 10px */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><div class="hint-container tip"><p class="hint-container-title">注意事项</p><ol><li><p><strong>重叠外边距（Margin Collapsing）</strong></p><ul><li>垂直方向的相邻两元素外边距如果相遇，较大的外边距将会“吞掉”较小的那个，而不是叠加。这是为了避免相邻的块元素被两个外边距累加后变得间隔过开。<div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.box1</span> <span class="token punctuation">{</span>
    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> lightgrey<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token selector">.box2</span> <span class="token punctuation">{</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span> 30px<span class="token punctuation">;</span>
    <span class="token property">background-color</span><span class="token punctuation">:</span> lightpink<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 50px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box1<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Box 1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>box2<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>Box 2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>实际效果：两段元素之间的间距为较大的外边距，即 30px，而不是 50px。</li></ul></li><li><p><strong>内边距影响盒子尺寸</strong></p><ul><li>默认情况下，内边距会增加盒子的总尺寸（宽高），这会导致实际显示的盒子比指定的宽高要大。</li><li>可以使用 <code>box-sizing: border-box;</code> 来包括 padding 和 border，在指定的宽高之内。<div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.box</span> <span class="token punctuation">{</span>
    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 5px solid black<span class="token punctuation">;</span>
    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span> <span class="token comment">/* 包括 padding 和 border */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>避免负值的内边距</strong></p><ul><li>内边距不允许负值，尝试设置负值会导致样式无效。</li><li>外边距可以使用负值来实现元素的部分重叠。<div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.negative-margin</span> <span class="token punctuation">{</span>
    <span class="token property">margin-top</span><span class="token punctuation">:</span> -10px<span class="token punctuation">;</span> <span class="token comment">/* 元素向上移动10px，与上一个元素重叠 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>使用百分比内边距与外边距</strong></p><ul><li>内外边距可以使用百分比值，此时值是相对于包含块（父元素）的宽度来计算。<div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.percentage-padding</span> <span class="token punctuation">{</span>
    <span class="token property">padding</span><span class="token punctuation">:</span> 5%<span class="token punctuation">;</span> <span class="token comment">/* 相对于父元素宽度的5% */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li></ol></div><h3 id="border边框" tabindex="-1"><a class="header-anchor" href="#border边框"><span>Border边框</span></a></h3><p>边框用来为元素增加视觉边界。常见属性包括：</p><ul><li><code>border-width</code>：边框宽度。</li><li><code>border-style</code>：边框样式（solid、dashed、dotted 等）。</li><li><code>border-color</code>：边框颜色。</li></ul><h4 id="边框圆角-border-radius" tabindex="-1"><a class="header-anchor" href="#边框圆角-border-radius"><span>边框圆角 (Border Radius)</span></a></h4><p><code>border-radius</code> 属性用于给元素的边框设置圆角。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.rounded-box</span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 2px solid #000<span class="token punctuation">;</span> <span class="token comment">/* 黑色实线边框 */</span>
    <span class="token property">border-radius</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token comment">/* 四角圆角半径为10px */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rounded-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>这是带圆角边框的盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>需要注意的是，如果 <code>border-radius</code> 设定值过大，也依然会被元素尺寸的边界约束。</p><h4 id="边框阴影-box-shadow" tabindex="-1"><a class="header-anchor" href="#边框阴影-box-shadow"><span>边框阴影 (Box Shadow)</span></a></h4><p><code>box-shadow</code> 属性用于给元素添加阴影效果。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.shadow-box</span> <span class="token punctuation">{</span>
    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #ccc<span class="token punctuation">;</span> <span class="token comment">/* 灰色边框 */</span>
    <span class="token property">box-shadow</span><span class="token punctuation">:</span> 5px 5px 10px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0<span class="token punctuation">,</span> 0.5<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">/* 阴影 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>shadow-box<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>这是带阴影的盒子<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>box-shadow</code> 参数解析：</p><ul><li>第一个值为水平偏移量。</li><li>第二个值为垂直偏移量。</li><li>第三个值为模糊半径。</li><li>第四个值是可选的扩展半径。</li><li>颜色值（<code>rgba</code> 表示透明度）。</li></ul><h3 id="box-sizing属性" tabindex="-1"><a class="header-anchor" href="#box-sizing属性"><span>box-sizing属性</span></a></h3><p><code>box-sizing</code>定义了元素盒模型的计算方式，决定了元素的宽度和高度如何包括边框、内边距以及内容区域。此属性有助于简化布局过程，特别是在处理包含边框和内边距的元素时。</p><ol><li><p><strong>content-box</strong>（默认值）:</p><ul><li><strong>含义</strong>: 元素的宽度和高度只包括内容区域，不包括边框和内边距。增加边框和内边距会导致元素尺寸变大。</li><li><strong>使用场景</strong>: 当你需要遵循传统的W3C盒模型时。</li></ul></li><li><p><strong>border-box</strong>:</p><ul><li><strong>含义</strong>: 元素的宽度和高度包括内容区域、边框和内边距。设置的宽度和高度固定，不会因边框和内边距而变化。</li><li><strong>使用场景</strong>: 这是进行布局时的推荐选择，因为它让元素尺寸更容易预测，尤其是在响应式设计中</li></ul></li></ol><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token comment">/* 将所有元素的盒模型设置为border-box */</span>
<span class="token selector">*, *::before, *::after</span> <span class="token punctuation">{</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">/* 具体元素的定制 */</span>
<span class="token selector">.example</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 300px<span class="token punctuation">;</span> <span class="token comment">/* 宽度包含边框和内边距 */</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span> <span class="token comment">/* 高度包含边框和内边距 */</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
  <span class="token property">border</span><span class="token punctuation">:</span> 5px solid #333<span class="token punctuation">;</span>
  <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在上述代码示例中，首先通过通配符选择器<code>*</code>将页面上所有元素的<code>box-sizing</code>属性设置为<code>border-box</code>，这是一种常见的做法，有助于全局统一盒模型计算方式，简化布局工作。随后，定义了一个<code>.example</code>类，展示了如何设置一个固定尺寸的盒子，其中宽度和高度包括了边框和内边距，由于使用了<code>border-box</code>，即便增加了内边距和边框，该元素的总尺寸仍然保持为300px宽和200px高。</p><h2 id="css应用实践" tabindex="-1"><a class="header-anchor" href="#css应用实践"><span>CSS应用实践</span></a></h2><h3 id="显示与隐藏" tabindex="-1"><a class="header-anchor" href="#显示与隐藏"><span>显示与隐藏</span></a></h3><table><thead><tr><th>属性</th><th>区别</th><th>用途</th></tr></thead><tbody><tr><td><strong>display</strong></td><td>隐藏对象，不保留位置</td><td>配合后面js做特效，比如下拉菜单，原先没有，鼠标经过，显示下拉菜单， 应用极为广泛</td></tr><tr><td><strong>visibility</strong></td><td>隐藏对象，保留位置</td><td>使用较少</td></tr><tr><td><strong>overflow</strong></td><td>只是隐藏超出大小的部分</td><td>1. 可以清除浮动 2. 保证盒子里面的内容不会超出该盒子范围</td></tr></tbody></table><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token property">display</span><span class="token punctuation">:</span> none   隐藏对象  特点： 隐藏之后，不再保留位置。
display：block  除了转换为块级元素之外，同时还有显示元素的意思。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code>visibility：visible <span class="token punctuation">;</span> 　对象可视
visibility：hidden<span class="token punctuation">;</span> 　  对象隐藏  特点： 隐藏之后，继续保留原有位置。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>overflow溢出</strong> ：检索或设置当对象的内容超过其指定高度及宽度时如何管理内容</p><table><thead><tr><th>属性值</th><th>描述</th></tr></thead><tbody><tr><td><strong>visible</strong></td><td>不剪切内容也不添加滚动条</td></tr><tr><td><strong>hidden</strong></td><td>不显示超过对象尺寸的内容，超出的部分隐藏掉</td></tr><tr><td><strong>scroll</strong></td><td>不管超出内容否，总是显示滚动条</td></tr><tr><td><strong>auto</strong></td><td>超出自动显示滚动条，不超出不显示滚动条</td></tr></tbody></table><br><p><strong>溢出的文字省略号显示</strong>：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>         <span class="token comment">/*1. 先强制一行内显示文本*/</span>
<span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>            <span class="token comment">/*2. 超出的部分隐藏*/</span>
<span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>     <span class="token comment">/*3. 文字用省略号替代超出的部分*/</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p> </p><br><h3 id="用户界面样式" tabindex="-1"><a class="header-anchor" href="#用户界面样式"><span>用户界面样式</span></a></h3><table><thead><tr><th>属性</th><th>用途</th><th>用途</th></tr></thead><tbody><tr><td><strong>鼠标样式</strong></td><td>更改鼠标样式cursor</td><td>样式很多，重点记住 pointer</td></tr><tr><td><strong>轮廓线</strong></td><td>表单默认outline</td><td>outline 轮廓线，我们一般直接去掉，border是边框，我们会经常用</td></tr><tr><td>防止拖拽</td><td>主要针对文本域resize</td><td>防止用户随意拖拽文本域，造成页面布局混乱，我们resize:none</td></tr></tbody></table><p><strong>鼠标样式cursor</strong> ：设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">cursor</span><span class="token punctuation">:</span>default</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>我是小白<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">cursor</span><span class="token punctuation">:</span>pointer</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>我是小手<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">cursor</span><span class="token punctuation">:</span>move</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>我是移动<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">cursor</span><span class="token punctuation">:</span>text</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>我是文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">cursor</span><span class="token punctuation">:</span>not-allowed</span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>我是文本<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>轮廓线 outline</strong> ：是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span>  <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text<span class="token punctuation">&quot;</span></span>  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">outline</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">/&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><strong>防止拖拽文本域resize</strong> ：实际开发中，我们文本域右下角是不可以拖拽：</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>textarea</span>  <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">resize</span><span class="token punctuation">:</span> none<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>textarea</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br><h3 id="水平-垂直居中" tabindex="-1"><a class="header-anchor" href="#水平-垂直居中"><span>水平/垂直居中</span></a></h3><ul><li>有宽度的块级元素居中对齐，是margin: 0 auto;</li><li>让文字居中对齐，是 text-align: center;</li><li>vertical-align</li></ul><p><strong>水平居中</strong></p><p>对于<strong>有固定宽度的块级元素</strong>，使用<code>margin: 0 auto;</code>可以让元素在其父容器内水平居中。这种方法依赖于块级元素的宽度是确定的，并且父容器能够提供足够的空间。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>block-element<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>我是水平居中的块级元素<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.container</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 100%<span class="token punctuation">;</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 用于文本或行内元素的居中，但此处用于辅助理解 */</span>
<span class="token punctuation">}</span>

<span class="token selector">.block-element</span> <span class="token punctuation">{</span>
  <span class="token property">width</span><span class="token punctuation">:</span> 200px<span class="token punctuation">;</span>
  <span class="token property">margin</span><span class="token punctuation">:</span> 0 auto<span class="token punctuation">;</span>
  <span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span>
  <span class="token property">padding</span><span class="token punctuation">:</span> 20px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>垂直居中</strong></p><p><strong>文本居中</strong></p><p>对于<strong>文本内容</strong>，使用<code>text-align: center;</code>可以让行内文本在父元素中水平居中。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>text-center<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  这段文字将在容器中居中显示。
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.text-center</span> <span class="token punctuation">{</span>
  <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>单行或多行文本块垂直居中</strong></p><p>对于<strong>单个块级元素</strong>的垂直居中，可以结合Flexbox或Grid布局快速实现。</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>flex-item<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>我是垂直居中的文本。<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.flex-container</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span>
  <span class="token property">justify-content</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 水平居中 */</span>
  <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 垂直居中 */</span>
  <span class="token property">height</span><span class="token punctuation">:</span> 100vh<span class="token punctuation">;</span> <span class="token comment">/* 为了演示，设定一个高度 */</span>
<span class="token punctuation">}</span>

<span class="token selector">.flex-item</span> <span class="token punctuation">{</span>
  <span class="token comment">/* 不需要特别样式，仅内容即可 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>图片或行内块元素的垂直对齐</strong>：</p><p>对于<strong>图片</strong>或<strong>表单</strong>等<strong>行内块元素</strong>，它们默认与父级容器的基线对齐，可能导致下方出现空白缝隙。</p><div class="hint-container info"><p class="hint-container-title">行内块空白间隙解决方法</p><ol><li><strong>使用<code>vertical-align</code></strong></li></ol><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image-container<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>image.jpg<span class="token punctuation">&quot;</span></span> <span class="token attr-name">alt</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>示例图片<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">.image-container</span> <span class="token punctuation">{</span>
  <span class="token property">line-height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> <span class="token comment">/* 减少基线影响，可选 */</span>
<span class="token punctuation">}</span>

<span class="token selector">img</span> <span class="token punctuation">{</span>
  <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span> <span class="token comment">/* 或top/bottom等 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><strong>转换为块级元素</strong></li></ol><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">img</span> <span class="token punctuation">{</span>
  <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span> <span class="token comment">/* 转换为块级元素，消除空白缝隙 */</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>通过上述方法，你可以有效地解决水平和垂直居中问题，以及消除行内块元素下方的空白缝隙。</p></div><h3 id="margin负值" tabindex="-1"><a class="header-anchor" href="#margin负值"><span>margin负值</span></a></h3><p>margin负值之美：</p><p>1). 负边距+定位：水平垂直居中：一个绝对定位的盒子， 利用 父级盒子的 50%， 然后 往左(上) 走 自己宽度的一半 ，可以实现盒子水平垂直居中。</p><p>2). 压住盒子相邻边框</p><br><h3 id="css三角形" tabindex="-1"><a class="header-anchor" href="#css三角形"><span>CSS三角形</span></a></h3><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code> <span class="token selector">div</span> <span class="token punctuation">{</span>
 	<span class="token property">width</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span> 
    <span class="token property">height</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    <span class="token property">line-height</span><span class="token punctuation">:</span>0；
    <span class="token property">font-size</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>
    
	<span class="token property">border-top</span><span class="token punctuation">:</span> 10px solid red<span class="token punctuation">;</span>
	<span class="token property">border-right</span><span class="token punctuation">:</span> 10px solid green<span class="token punctuation">;</span>
	<span class="token property">border-bottom</span><span class="token punctuation">:</span> 10px solid blue<span class="token punctuation">;</span>
	<span class="token property">border-left</span><span class="token punctuation">:</span> 10px solid #000<span class="token punctuation">;</span> 
 <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>做法如下：</strong></p><ol><li>我们用css 边框可以模拟三角效果</li><li>宽度高度为0</li><li>我们4个边框都要写， 只保留需要的边框颜色，其余的不能省略，都改为 transparent 透明就好了</li><li>为了照顾兼容性 低版本的浏览器，加上 font-size: 0; line-height: 0;</li></ol><br>`,155),l=[p];function c(o,i){return s(),a("div",null,l)}const r=n(e,[["render",c],["__file","css.html.vue"]]),k=JSON.parse('{"path":"/web/base/css/css.html","title":"CSS选择器与盒模型","lang":"en-US","frontmatter":{"order":1,"title":"CSS选择器与盒模型","description":"CSS基础和样式 书写规范及注释 属性名与值全部小写：CSS中标签名、属性名和属性值都使用小写。 属性名和属性值之间保留一个空格：如color: red;。 语句结尾加分号：每条CSS语句的结尾加分号，即使是最后一条规则。 缩进与对齐：用两个或四个空格进行缩进，确保代码结构清晰。 注释： 样式表分类 内联样式表（Inline CSS）： 直接在HTML...","head":[["meta",{"property":"og:url","content":"https://x.app/notebook/web/base/css/css.html"}],["meta",{"property":"og:site_name","content":"Notebook"}],["meta",{"property":"og:title","content":"CSS选择器与盒模型"}],["meta",{"property":"og:description","content":"CSS基础和样式 书写规范及注释 属性名与值全部小写：CSS中标签名、属性名和属性值都使用小写。 属性名和属性值之间保留一个空格：如color: red;。 语句结尾加分号：每条CSS语句的结尾加分号，即使是最后一条规则。 缩进与对齐：用两个或四个空格进行缩进，确保代码结构清晰。 注释： 样式表分类 内联样式表（Inline CSS）： 直接在HTML..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-05-26T15:08:44.000Z"}],["meta",{"property":"article:author","content":"Mr.Topple"}],["meta",{"property":"article:modified_time","content":"2024-05-26T15:08:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"CSS选择器与盒模型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-05-26T15:08:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Topple\\",\\"url\\":\\"https://www.baidu.com\\"}]}"]]},"headers":[{"level":2,"title":"CSS基础和样式","slug":"css基础和样式","link":"#css基础和样式","children":[{"level":3,"title":"书写规范及注释","slug":"书写规范及注释","link":"#书写规范及注释","children":[]},{"level":3,"title":"样式表分类","slug":"样式表分类","link":"#样式表分类","children":[]},{"level":3,"title":"常用样式介绍","slug":"常用样式介绍","link":"#常用样式介绍","children":[]},{"level":3,"title":"背景颜色和图片","slug":"背景颜色和图片","link":"#背景颜色和图片","children":[]},{"level":3,"title":"文本和字体样式","slug":"文本和字体样式","link":"#文本和字体样式","children":[]},{"level":3,"title":"Display属性","slug":"display属性","link":"#display属性","children":[]}]},{"level":2,"title":"CSS选择器及权重","slug":"css选择器及权重","link":"#css选择器及权重","children":[{"level":3,"title":"基础选择器","slug":"基础选择器","link":"#基础选择器","children":[]},{"level":3,"title":"复合选择器","slug":"复合选择器","link":"#复合选择器","children":[]},{"level":3,"title":"选择器权重计算","slug":"选择器权重计算","link":"#选择器权重计算","children":[]}]},{"level":2,"title":"盒模型(Box Model)","slug":"盒模型-box-model","link":"#盒模型-box-model","children":[{"level":3,"title":"CSS盒模型","slug":"css盒模型","link":"#css盒模型","children":[]},{"level":3,"title":"Margin/Padding","slug":"margin-padding","link":"#margin-padding","children":[]},{"level":3,"title":"Border边框","slug":"border边框","link":"#border边框","children":[]},{"level":3,"title":"box-sizing属性","slug":"box-sizing属性","link":"#box-sizing属性","children":[]}]},{"level":2,"title":"CSS应用实践","slug":"css应用实践","link":"#css应用实践","children":[{"level":3,"title":"显示与隐藏","slug":"显示与隐藏","link":"#显示与隐藏","children":[]},{"level":3,"title":"用户界面样式","slug":"用户界面样式","link":"#用户界面样式","children":[]},{"level":3,"title":"水平/垂直居中","slug":"水平-垂直居中","link":"#水平-垂直居中","children":[]},{"level":3,"title":"margin负值","slug":"margin负值","link":"#margin负值","children":[]},{"level":3,"title":"CSS三角形","slug":"css三角形","link":"#css三角形","children":[]}]}],"git":{"createdTime":1713172018000,"updatedTime":1716736124000,"contributors":[{"name":"Neil","email":"msdrizzle@outlook.com","commits":2}]},"readingTime":{"minutes":23.32,"words":6996},"filePathRelative":"web/base/css/css.md","localizedDate":"April 15, 2024","autoDesc":true}');export{r as comp,k as data};
