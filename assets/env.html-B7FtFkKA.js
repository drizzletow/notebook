import{_ as d}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,o as p,c as u,b as n,d as a,a as e,w as t,e as o}from"./app-BmKeAxq8.js";const m={},h=n("h2",{id:"python",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#python"},[n("span",null,"Python")])],-1),v=n("p",null,"使用Python进行编程需要安装Python解释器，以及一些常用的第三方库。",-1),b=n("h3",{id:"下载和安装",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#下载和安装"},[n("span",null,"下载和安装")])],-1),g=n("p",null,"Python解释器可以从官网下载：",-1),k={href:"https://www.python.org/",target:"_blank",rel:"noopener noreferrer"},y={href:"https://www.python.org/downloads/",target:"_blank",rel:"noopener noreferrer"},_=o(`<div class="hint-container warning"><p class="hint-container-title">Python环境变量</p><p>注意安装过程中会出现 <code>Add Python to PATH</code> 选项，勾选即可，如果没有选择或错过，则需手动添加一下环境变量，这样才能在命令行中使用Python命令</p></div><p>常用的第三方库有numpy、pandas、matplotlib等，可以使用pip命令安装。</p><h3 id="第三方库管理" tabindex="-1"><a class="header-anchor" href="#第三方库管理"><span>第三方库管理</span></a></h3><p>python的第三方库管理器一般都使用pip，可以根据所开发项目的需要，使用pip相关命令安装不同库</p><p>Pyhon3.4以后，pip都默认跟Python一块安装，pip在python安装目录中的scripts目录下</p><div class="hint-container info"><p class="hint-container-title">pip常用命令</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token parameter variable">--version</span>                   <span class="token comment"># 查看pip版本</span>
pip list                        <span class="token comment"># 查看已经安装的第三方库</span>

<span class="token comment"># 使用pip安装（指定版本的）第三方库（可以使用参数i指定pip源）：</span>
pip <span class="token function">install</span> <span class="token assign-left variable">robotframework</span><span class="token operator">==</span><span class="token number">2.8</span>.7 <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple

pip uninstall requests          <span class="token comment"># 卸载指定的已安装库</span>
pip <span class="token function">install</span> <span class="token parameter variable">-U</span> requests         <span class="token comment"># 更新指定的库</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>更新pip版本：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>python <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> pip 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><p>通常在实际应用和项目开发中，都需要安装多个库，此时可以通过使用 <code>requirements.txt</code> 文件的方式批量安装。</p><p>将本地的库和版本号导出到<code>requirements.txt</code>文件中:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip freeze <span class="token operator">&gt;</span> requirements.txt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>通过<code>requirements.txt</code>文件批量安装：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> <span class="token parameter variable">-r</span> requirements.txt <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="anaconda" tabindex="-1"><a class="header-anchor" href="#anaconda"><span>Anaconda</span></a></h2><p>Anaconda集成了Python解释器和常用的第三方库，可以方便地进行科学计算和数据分析</p>`,13),f={href:"https://www.anaconda.com/",target:"_blank",rel:"noopener noreferrer"},x={href:"https://www.anaconda.com/download/",target:"_blank",rel:"noopener noreferrer"},w=o(`<div class="hint-container info"><p class="hint-container-title">Anaconda相关环境变量</p><p>安装了Anaconda后同样需要检查并配置环境变量，通常需要需要如下两个（以安装在 <code>C:\\ProgramData</code> 为例）：</p><ul><li><code>C:\\ProgramData\\anaconda3</code> 该目录下包含python.exe，可使用 <code>python -V</code>命令进行检验</li><li><code>C:\\ProgramData\\anaconda3\\Scripts</code> conda自带脚本，配置后可使用 <code>conda info</code> 等命令</li></ul></div><h3 id="conda源配置" tabindex="-1"><a class="header-anchor" href="#conda源配置"><span>conda源配置</span></a></h3><ul><li>conda 可以通过修改<code>.condarc</code> 文件来配置镜像源。由于 Windows 用户可能无法直接创建名为<code>.condarc</code> 的文件，可先在 cmd 中执行以下命令，生成.condarc 文件后，再进行修改。</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda config <span class="token parameter variable">--set</span> show_channel_urls <span class="token function">yes</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>执行玩上述命令后，生成的.condarc 文件位于用户文件夹中 C:\\Users\\xxx，(xxx)是你实际的用户名</p><p>打开<code>.condarc</code> 文件，将其中内容替换为以下代码，保存退出即可：</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>channels:
  - defaults
show_channel_urls: true
default_channels:
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/r
  - https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/msys2
custom_channels:
  conda-forge: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  msys2: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  bioconda: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  menpo: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  pytorch: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  pytorch-lts: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  simpleitk: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud
  deepmodeling: https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conda常用命令" tabindex="-1"><a class="header-anchor" href="#conda常用命令"><span>conda常用命令</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda <span class="token parameter variable">--version</span>                                  <span class="token comment"># 查看conda版本</span>
conda update conda                               <span class="token comment"># 更新至最新的conda</span>

conda update <span class="token parameter variable">--all</span>                               <span class="token comment"># 更新当前环境所有包</span>
conda update package_name                        <span class="token comment"># 指定包至最新</span>

conda <span class="token function">env</span> list                                   <span class="token comment"># 查看已有的虚拟环境</span>
conda create <span class="token parameter variable">-n</span> python_3.9 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.9</span>            <span class="token comment"># 创建虚拟环境</span>
conda create <span class="token parameter variable">--name</span> Py_3.9 <span class="token parameter variable">--clone</span> python_3.9    <span class="token comment"># 复制虚拟环境</span>
conda activate python_3.9                        <span class="token comment"># 激活虚拟环境</span>

conda remove <span class="token parameter variable">-n</span> python_3.9 <span class="token parameter variable">--all</span>                 <span class="token comment"># 删除虚拟环境</span>

conda list                                       <span class="token comment"># 查看当前环境所有包情况</span>
conda search numpy                               <span class="token comment"># 查看numpy有哪些版本</span>

conda <span class="token function">install</span> numpy                              <span class="token comment"># 安装numpy包在当前环境</span>
conda remove numpy                               <span class="token comment"># 删除当前环境中的numpy包</span>

conda config --remove-key channels               <span class="token comment"># 回复默认源</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="conda虚拟环境" tabindex="-1"><a class="header-anchor" href="#conda虚拟环境"><span>conda虚拟环境</span></a></h3><h4 id="创建虚拟环境" tabindex="-1"><a class="header-anchor" href="#创建虚拟环境"><span>创建虚拟环境</span></a></h4><p>使用Anaconda的一大原因是其可以管理多个版本的Python环境，通过Anaconda可以创建不同的虚拟环境并指定所需的Python版本，即可以在同一台计算机上同时管理和使用多个不同版本的Python。这对于在不同项目中使用不同版本的Python或测试代码在不同版本中的兼容性非常有用。</p><p>可以使用如下命令查看系统中的虚拟环境：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda <span class="token function">env</span> list          <span class="token comment"># 查看虚拟环境列表</span>
conda info              <span class="token comment"># 查看Anaconda相关配置信息，包括虚拟环境的存储位置等</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container caution"><p class="hint-container-title">Anaconda创建虚拟环境</p><p>打开终端或命令提示符窗口，在命令中指定要使用的Python版本来创建虚拟环境:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 创建一个名为&quot;myenv&quot;的环境，并使用Python 3.7版本</span>
conda create <span class="token parameter variable">--name</span> myenv <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.7</span>  

<span class="token comment"># 指定目录位置并创建一个名为 python3_7 的环境</span>
conda create <span class="token parameter variable">--prefix</span><span class="token operator">=</span>C:<span class="token punctuation">\\</span>ProgramData<span class="token punctuation">\\</span>anaconda3<span class="token punctuation">\\</span>envs<span class="token punctuation">\\</span>python3_7 <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.7</span>

<span class="token comment"># 克隆环境</span>
conda create <span class="token parameter variable">--name</span> sdw <span class="token parameter variable">--clone</span> pytorch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h4 id="激活虚拟环境" tabindex="-1"><a class="header-anchor" href="#激活虚拟环境"><span>激活虚拟环境</span></a></h4><p>创建虚拟环境后，你需要激活它才能在其中工作。运行以下命令来激活名为&quot;myenv&quot;的虚拟环境：</p>`,17),P=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token builtin class-name"},"source"),a(` activate myenv
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),A=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,`conda activate myenv
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),C=o(`<p>在虚拟环境激活后，你可以使用conda命令来安装需要的包和软件。例如，要安装numpy包，运行以下命令：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda <span class="token function">install</span> numpy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>一旦你的虚拟环境激活并安装了所需的包和软件，你可以在该环境中运行你的Python程序或执行其他操作。确保始终在虚拟环境中执行你的代码，以隔离不同环境中的Python版本和包依赖。</p><h4 id="退出虚拟环境" tabindex="-1"><a class="header-anchor" href="#退出虚拟环境"><span>退出虚拟环境</span></a></h4><p>当你完成工作或需要切换到另一个虚拟环境时，可以通过以下命令退出当前环境：</p>`,5),T=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token builtin class-name"},"source"),a(` deactivate
`)])]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),q=n("div",{class:"language-bash line-numbers-mode","data-ext":"sh","data-title":"sh"},[n("pre",{class:"language-bash"},[n("code",null,`conda deactivate
`)]),n("div",{class:"line-numbers","aria-hidden":"true"},[n("div",{class:"line-number"})])],-1),O=o(`<p>如果不再需要进行其他任务，直接关闭命令行即可。</p><h4 id="删除虚拟环境" tabindex="-1"><a class="header-anchor" href="#删除虚拟环境"><span>删除虚拟环境</span></a></h4><p>注意删除之前要先退出待删除的虚拟环境</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>conda deactivate
conda remove <span class="token parameter variable">-n</span> tf2 <span class="token parameter variable">--all</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="ai环境搭建" tabindex="-1"><a class="header-anchor" href="#ai环境搭建"><span>AI环境搭建</span></a></h2><h3 id="pytorch" tabindex="-1"><a class="header-anchor" href="#pytorch"><span>pytorch</span></a></h3><p>使用pytorch一定要先去官网，官网会自动获取当前电脑的配置信息并给出相关包的安装命令，我们唯一需要注意的只有自己显卡驱动支持的最新CUDAversion即可，可以使用下面的命令查看：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>nvidia-smi
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,8),S=n("br",null,null,-1),I={href:"https://pytorch.org/",target:"_blank",rel:"noopener noreferrer"},L={href:"https://pytorch.org/get-started/locally",target:"_blank",rel:"noopener noreferrer"},R={href:"https://pytorch.org/get-started/previous-versions/",target:"_blank",rel:"noopener noreferrer"},D=o(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 先利用conda创建并激活一个适用于pytorch的虚拟环境</span>
conda create <span class="token parameter variable">-n</span> pytorch <span class="token assign-left variable">python</span><span class="token operator">=</span><span class="token number">3.8</span>
conda activate pytorch

<span class="token comment"># 执行官网页面给你生成的pytorch安装命令</span>
conda <span class="token function">install</span> pytorch torchvision torchaudio pytorch-cuda<span class="token operator">=</span><span class="token number">11.8</span> <span class="token parameter variable">-c</span> pytorch <span class="token parameter variable">-c</span> nvidia
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装完成后启动python,检查是否可以正常使用：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> torch
<span class="token keyword">print</span><span class="token punctuation">(</span>torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>返回是<code>True</code>即可</p><h3 id="tensorflow" tabindex="-1"><a class="header-anchor" href="#tensorflow"><span>tensorflow</span></a></h3>`,5),N={href:"https://blog.csdn.net/weixin_44791964/article/details/120657664",target:"_blank",rel:"noopener noreferrer"},B=n("h2",{id:"tesseract-ocr",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tesseract-ocr"},[n("span",null,"Tesseract OCR")])],-1),U=n("p",null,"Tesseract，一款由HP实验室开发由Google维护的开源OCR（Optical Character Recognition , 光学字符识别）引擎",-1),V={href:"https://github.com/tesseract-ocr/tesseract",target:"_blank",rel:"noopener noreferrer"},W={href:"https://github.com/tesseract-ocr/tessdoc",target:"_blank",rel:"noopener noreferrer"},z={href:"https://github.com/tesseract-ocr/tessdata",target:"_blank",rel:"noopener noreferrer"},E={href:"https://digi.bib.uni-mannheim.de/tesseract/",target:"_blank",rel:"noopener noreferrer"},F=o(`<div class="hint-container tip"><p class="hint-container-title">安装</p><p>这里下载编译好的exe来安装：</p><ol><li>安装过程可以附带选择要安装的语言包（开梯子的话），另外可以单独下载语言包，复制到tessdata文件夹里面即可。</li><li>设置环境变量，例：<code>C:\\Program Files\\Tesseract-OCR</code></li><li>检查查看是否安装成功</li></ol><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment"># 查看版本</span>
tesseract <span class="token parameter variable">-v</span>

<span class="token comment"># 查看已安装的可识别语言</span>
tesseract --list-langs
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container info"><p class="hint-container-title">Python使用示例</p><ul><li>安装pytesseract库</li></ul><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> pytesseract <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>示例代码</li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> pytesseract
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image
<span class="token builtin">file</span> <span class="token operator">=</span> <span class="token string">r&quot;my.png&quot;</span>

<span class="token comment"># 配置 Tesseract OCR 引擎的路径（根据您的实际安装路径进行设置）</span>
<span class="token comment"># pytesseract.pytesseract.tesseract_cmd = r&#39;C:\\Program Files\\Tesseract-OCR\\tesseract.exe&#39;</span>

<span class="token comment"># 建议图像识别前，先对图像进行灰度化和 二值化，以提高文本识别率</span>
<span class="token comment"># image = Image.open(file)</span>
<span class="token comment"># Img = image.convert(&#39;L&#39;)   # 灰度化</span>
<span class="token comment"># #自定义灰度界限，这里可以大于这个值为黑色，小于这个值为白色。</span>
<span class="token comment"># threshold可根据实际情况进行调整(最大可为255)。</span>
<span class="token comment"># threshold = 180</span>
<span class="token comment"># table = []</span>
<span class="token comment"># for i in range(256):</span>
<span class="token comment">#     if i &lt; threshold:</span>
<span class="token comment">#         table.append(0)</span>
<span class="token comment">#     else:</span>
<span class="token comment">#         table.append(1)</span>
<span class="token comment"># photo = Img.point(table, &#39;1&#39;)  #图片二值化</span>
<span class="token comment"># #保存处理好的图片</span>
<span class="token comment"># photo.save(newfile)</span>

image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token builtin">file</span><span class="token punctuation">)</span>
<span class="token comment"># 解析图片，lang=&#39;chi_sim&#39;表示识别简体中文，默认为English</span>
<span class="token comment"># 如果是只识别数字，可再加上参数config=&#39;--psm 6 --oem 3 -c tessedit_char_whitelist=0123456789&#39;</span>
content <span class="token operator">=</span> pytesseract<span class="token punctuation">.</span>image_to_string<span class="token punctuation">(</span>image<span class="token punctuation">,</span> lang<span class="token operator">=</span><span class="token string">&#39;chi_sim&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><div class="hint-container caution"><p class="hint-container-title">注意事项</p><p>使用时要注意环境变量的问题，一般有下面两种方式：</p><ul><li><p>将tesseract安装目录添加至电脑的环境变量。</p></li><li><p>在代码中指定tesseract的路径</p></li></ul><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>pytesseract<span class="token punctuation">.</span>pytesseract<span class="token punctuation">.</span>tesseract_cmd <span class="token operator">=</span> <span class="token string">r&#39;C:\\Program Files\\Tesseract-OCR\\tesseract.exe&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div>`,3);function M(Z,H){const s=r("ExternalLinkIcon"),c=r("CodeTabs");return p(),u("div",null,[h,v,b,g,n("p",null,[a("Python官网地址："),n("a",k,[a("https://www.python.org/"),e(s)])]),n("p",null,[a("Python下载地址："),n("a",y,[a("https://www.python.org/downloads/"),e(s)]),a(" （选择平台后下载即可）")]),_,n("p",null,[a("Anaconda官网地址："),n("a",f,[a("https://www.anaconda.com/"),e(s)])]),n("p",null,[a("Anaconda下载地址："),n("a",x,[a("https://www.anaconda.com/download/"),e(s)]),a(" （选择对应平台下载即可）")]),w,e(c,{id:"129",data:[{id:"macOS/Linux"},{id:"Windows"}],active:1,"tab-id":"shell"},{title0:t(({value:i,isActive:l})=>[a("macOS/Linux")]),title1:t(({value:i,isActive:l})=>[a("Windows")]),tab0:t(({value:i,isActive:l})=>[P]),tab1:t(({value:i,isActive:l})=>[A]),_:1}),C,e(c,{id:"150",data:[{id:"macOS/Linux"},{id:"Windows"}],active:1,"tab-id":"shell"},{title0:t(({value:i,isActive:l})=>[a("macOS/Linux")]),title1:t(({value:i,isActive:l})=>[a("Windows")]),tab0:t(({value:i,isActive:l})=>[T]),tab1:t(({value:i,isActive:l})=>[q]),_:1}),O,n("p",null,[a("若非要使用C++等其他方式进行开发任务，单纯的使用pytorch只需要安装pytorch（自带cuda和cudnn库）就行了"),S,a(" pytorch官网："),n("a",I,[a("https://pytorch.org/"),e(s)])]),n("p",null,[a("或者直接访问："),n("a",L,[a("StartLocally"),e(s)]),a(", 也可以访问其 "),n("a",R,[a("历史版本"),e(s)])]),D,n("p",null,[a("30系显卡深度学习环境配置："),n("a",N,[a("https://blog.csdn.net/weixin_44791964/article/details/120657664"),e(s)])]),B,U,n("ul",null,[n("li",null,[a("官方网站："),n("a",V,[a("https://github.com/tesseract-ocr/tesseract"),e(s)])]),n("li",null,[a("官方文档："),n("a",W,[a("https://github.com/tesseract-ocr/tessdoc"),e(s)])]),n("li",null,[a("语言包地址："),n("a",z,[a("https://github.com/tesseract-ocr/tessdata"),e(s)])]),n("li",null,[a("下载地址："),n("a",E,[a("https://digi.bib.uni-mannheim.de/tesseract/"),e(s)])])]),F])}const J=d(m,[["render",M],["__file","env.html.vue"]]),K=JSON.parse('{"path":"/python/BasicSyntax/env.html","title":"Python环境安装","lang":"en-US","frontmatter":{"order":1,"icon":"tool","title":"Python环境安装","description":"Python 使用Python进行编程需要安装Python解释器，以及一些常用的第三方库。 下载和安装 Python解释器可以从官网下载： Python官网地址：https://www.python.org/ Python下载地址：https://www.python.org/downloads/ （选择平台后下载即可） Python环境变量 注意安装...","head":[["meta",{"property":"og:url","content":"https://x.app/notebook/python/BasicSyntax/env.html"}],["meta",{"property":"og:site_name","content":"Notebook"}],["meta",{"property":"og:title","content":"Python环境安装"}],["meta",{"property":"og:description","content":"Python 使用Python进行编程需要安装Python解释器，以及一些常用的第三方库。 下载和安装 Python解释器可以从官网下载： Python官网地址：https://www.python.org/ Python下载地址：https://www.python.org/downloads/ （选择平台后下载即可） Python环境变量 注意安装..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-03T10:40:35.000Z"}],["meta",{"property":"article:author","content":"Mr.Topple"}],["meta",{"property":"article:modified_time","content":"2024-04-03T10:40:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Python环境安装\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-03T10:40:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Topple\\",\\"url\\":\\"https://www.baidu.com\\"}]}"]]},"headers":[{"level":2,"title":"Python","slug":"python","link":"#python","children":[{"level":3,"title":"下载和安装","slug":"下载和安装","link":"#下载和安装","children":[]},{"level":3,"title":"第三方库管理","slug":"第三方库管理","link":"#第三方库管理","children":[]}]},{"level":2,"title":"Anaconda","slug":"anaconda","link":"#anaconda","children":[{"level":3,"title":"conda源配置","slug":"conda源配置","link":"#conda源配置","children":[]},{"level":3,"title":"conda常用命令","slug":"conda常用命令","link":"#conda常用命令","children":[]},{"level":3,"title":"conda虚拟环境","slug":"conda虚拟环境","link":"#conda虚拟环境","children":[]}]},{"level":2,"title":"AI环境搭建","slug":"ai环境搭建","link":"#ai环境搭建","children":[{"level":3,"title":"pytorch","slug":"pytorch","link":"#pytorch","children":[]},{"level":3,"title":"tensorflow","slug":"tensorflow","link":"#tensorflow","children":[]}]},{"level":2,"title":"Tesseract OCR","slug":"tesseract-ocr","link":"#tesseract-ocr","children":[]}],"git":{"createdTime":1712140835000,"updatedTime":1712140835000,"contributors":[{"name":"Neil","email":"msdrizzle@outlook.com","commits":1}]},"readingTime":{"minutes":7.08,"words":2123},"filePathRelative":"python/BasicSyntax/env.md","localizedDate":"April 3, 2024","autoDesc":true}');export{J as comp,K as data};
