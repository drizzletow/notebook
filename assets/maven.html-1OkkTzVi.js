import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as i,c,b as n,d as a,a as t,e}from"./app-DwcluZE3.js";const o="/notebook/assets/image-20211104214055983-DTtSfRIu.png",u="/notebook/assets/image-20211104225228879-eZUKEUsi.png",d="/notebook/assets/image-20220326161522530-CneKs4nJ.png",r="/notebook/assets/image-20220326161925897-C2Yxh9JF.png",v="/notebook/assets/image-20220326162214441-C2r4nzwG.png",g="/notebook/assets/image-20220326143023757-BalgYP6j.png",k="/notebook/assets/image-20220326143727490-CJAJOaqb.png",m="/notebook/assets/image-20220326144336583-D9w5WOhC.png",b={},h=e('<h1 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h1><h2 id="一-maven简介" tabindex="-1"><a class="header-anchor" href="#一-maven简介"><span>一 Maven简介</span></a></h2><p>Maven 翻译为&quot;专家&quot;、&quot;内行&quot;，是 Apache 下的一个纯 Java 开发的开源 项目。</p><p>Maven 是一个项目管理工具，可以对 Java 项目进行构建、依赖管理。</p><br><h3 id="_1-maven的安装" tabindex="-1"><a class="header-anchor" href="#_1-maven的安装"><span>1. Maven的安装</span></a></h3>',6),f={href:"https://maven.apache.org/download.cgi",target:"_blank",rel:"noopener noreferrer"},x={href:"https://mvnrepository.com/",target:"_blank",rel:"noopener noreferrer"},y=e('<br><p>安装：解压到指定目录即可，注意maven需要配置 <code>JAVA_HOME</code> 和 <code>MAVEN_HOME</code> ：</p><figure><img src="'+o+`" alt="image-20211104214055983" tabindex="0" loading="lazy"><figcaption>image-20211104214055983</figcaption></figure><br><p>Linux下的环境变量配置：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">vim</span> /etc/profile

<span class="token builtin class-name">export</span> <span class="token assign-left variable">MAVEN_HOME</span><span class="token operator">=</span>/usr/maven/apache-maven-3.8.5
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$MAVEN_HOME</span>/bin:<span class="token environment constant">$PATH</span>

<span class="token builtin class-name">source</span> /etc/profile

<span class="token comment"># 测试是否安装成功</span>

mvn <span class="token parameter variable">-v</span>
mvn <span class="token parameter variable">-version</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Mac下的环境变量配置</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">open</span> ~/.bash_profile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>将 maven 添加到系统环境变量里</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token comment">#maven</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">MAVEN_HOME</span><span class="token operator">=</span>/maven根路径
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token variable">$MAVEN_HOME</span>/bin:<span class="token environment constant">$PATH</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>让系统环境变量强制生效并查看maven信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> ~/.bash_profile
mvn <span class="token parameter variable">-version</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_2-maven仓库配置" tabindex="-1"><a class="header-anchor" href="#_2-maven仓库配置"><span>2. Maven仓库配置</span></a></h3><p>修改 <code>conf</code> 目录下的 <code>settings.xml</code> ：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 配置本地仓库地址 （settings.xml） --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>localRepository</span><span class="token punctuation">&gt;</span></span>D:\\Develop\\env\\maven\\repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>localRepository</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><br><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 配置远程（中央）仓库地址 （settings.xml） --&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirror</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">&gt;</span></span>aliyunmaven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">&gt;</span></span>aliyun maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">&gt;</span></span>http://maven.aliyun.com/nexus/content/groups/public/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>central<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirrorOf</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mirror</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,18),_={href:"https://developer.aliyun.com/mvn/guide",target:"_blank",rel:"noopener noreferrer"},M=e('<br><h3 id="_3-idea设置maven" tabindex="-1"><a class="header-anchor" href="#_3-idea设置maven"><span>3. IDEA设置Maven</span></a></h3><p>IDEA中的maven配置：</p><figure><img src="'+u+'" alt="image-20211104225228879" tabindex="0" loading="lazy"><figcaption>image-20211104225228879</figcaption></figure><br><h3 id="_4-创建maven项目" tabindex="-1"><a class="header-anchor" href="#_4-创建maven项目"><span>4. 创建Maven项目</span></a></h3><p>IDEA可以便捷的创建一个maven项目，但一个普通的java项目也可以升级为maven项目：</p><br><p>操作步骤：</p><p>先创建一个java普通项目、再创建maven项目所需的目录结构和 pom.xml 文件</p><figure><img src="'+d+`" alt="image-20220326161522530" tabindex="0" loading="lazy"><figcaption>image-20220326161522530</figcaption></figure><br><p>完善pom.xml文件：</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token prolog">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">&quot;</span></span>
         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">&gt;</span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>cn.itdrizzle<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>java-to-maven<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>0.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p>此时，maven项目已经创建完成了，可以执行maven命令试试：</p><figure><img src="`+r+'" alt="image-20220326161925897" tabindex="0" loading="lazy"><figcaption>image-20220326161925897</figcaption></figure><br><p>但此时IDEA还不能识别为maven项目，需要标记以下：</p><figure><img src="'+v+'" alt="image-20220326162214441" tabindex="0" loading="lazy"><figcaption>image-20220326162214441</figcaption></figure><br><h2 id="二-maven生命周期" tabindex="-1"><a class="header-anchor" href="#二-maven生命周期"><span>二 Maven生命周期</span></a></h2>',22),j={href:"https://maven.apache.org/ref/3.8.5/maven-core/lifecycles.html",target:"_blank",rel:"noopener noreferrer"},I=n("h3",{id:"_1-生命周期与插件",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-生命周期与插件"},[n("span",null,"1. 生命周期与插件")])],-1),w=n("p",null,[a("Maven defines 3 lifecycles in "),n("code",null,"META-INF/plexus/components.xml"),a(":")],-1),q={href:"https://maven.apache.org/ref/3.8.5/maven-core/lifecycles.html#clean_Lifecycle",target:"_blank",rel:"noopener noreferrer"},A=n("p",null,[a("当我们执行 "),n("code",null,"mvn post-clean"),a(" 命令时，Maven 调用 clean 生命周期，它包含以下阶段：")],-1),T=n("ul",null,[n("li",null,"pre-clean：执行一些需要在clean之前完成的工作"),n("li",null,"clean：移除所有上一次构建生成的文件"),n("li",null,"post-clean：执行一些需要在clean之后立刻完成的工作")],-1),E=n("p",null,[n("code",null,"mvn clean"),a(" 中的 clean 就是上面的 clean，在一个生命周期中，运行某个阶段的时候，它之前的所有阶段都会被运行")],-1),z=n("br",null,null,-1),J={href:"https://maven.apache.org/ref/3.8.5/maven-core/lifecycles.html#default_Lifecycle",target:"_blank",rel:"noopener noreferrer"},C=e('<p>这是 Maven 的主要生命周期，被用于构建应用，包括下面的 23 个阶段：</p><table><thead><tr><th style="text-align:left;">生命周期阶段</th><th style="text-align:left;">描述</th></tr></thead><tbody><tr><td style="text-align:left;">validate（校验）</td><td style="text-align:left;">校验项目是否正确并且所有必要的信息可以完成项目的构建过程。</td></tr><tr><td style="text-align:left;">initialize（初始化）</td><td style="text-align:left;">初始化构建状态，比如设置属性值。</td></tr><tr><td style="text-align:left;">generate-sources（生成源代码）</td><td style="text-align:left;">生成包含在编译阶段中的任何源代码。</td></tr><tr><td style="text-align:left;">process-sources（处理源代码）</td><td style="text-align:left;">处理源代码，比如说，过滤任意值。</td></tr><tr><td style="text-align:left;">generate-resources（生成资源文件）</td><td style="text-align:left;">生成将会包含在项目包中的资源文件。</td></tr><tr><td style="text-align:left;">process-resources （处理资源文件）</td><td style="text-align:left;">复制和处理资源到目标目录，为打包阶段最好准备。</td></tr><tr><td style="text-align:left;">compile（编译）</td><td style="text-align:left;">编译项目的源代码。</td></tr><tr><td style="text-align:left;">process-classes（处理类文件）</td><td style="text-align:left;">处理编译生成的文件，比如说对Java class文件做字节码改善优化。</td></tr><tr><td style="text-align:left;">generate-test-sources（生成测试源代码）</td><td style="text-align:left;">生成包含在编译阶段中的任何测试源代码。</td></tr><tr><td style="text-align:left;">process-test-sources（处理测试源代码）</td><td style="text-align:left;">处理测试源代码，比如说，过滤任意值。</td></tr><tr><td style="text-align:left;">generate-test-resources（生成测试资源文件）</td><td style="text-align:left;">为测试创建资源文件。</td></tr><tr><td style="text-align:left;">process-test-resources（处理测试资源文件）</td><td style="text-align:left;">复制和处理测试资源到目标目录。</td></tr><tr><td style="text-align:left;">test-compile（编译测试源码）</td><td style="text-align:left;">编译测试源代码到测试目标目录.</td></tr><tr><td style="text-align:left;">process-test-classes（处理测试类文件）</td><td style="text-align:left;">处理测试源码编译生成的文件。</td></tr><tr><td style="text-align:left;">test（测试）</td><td style="text-align:left;">使用合适的单元测试框架运行测试（Juint是其中之一）。</td></tr><tr><td style="text-align:left;">prepare-package（准备打包）</td><td style="text-align:left;">在实际打包之前，执行任何的必要的操作为打包做准备。</td></tr><tr><td style="text-align:left;">package（打包）</td><td style="text-align:left;">将编译后的代码打包成可分发格式的文件，比如JAR、WAR或者EAR文件。</td></tr><tr><td style="text-align:left;">pre-integration-test（集成测试前）</td><td style="text-align:left;">在执行集成测试前进行必要的动作。比如说，搭建需要的环境。</td></tr><tr><td style="text-align:left;">integration-test（集成测试）</td><td style="text-align:left;">处理和部署项目到可以运行集成测试环境中。</td></tr><tr><td style="text-align:left;">post-integration-test（集成测试后）</td><td style="text-align:left;">在执行集成测试完成后进行必要的动作。比如说，清理集成测试环境。</td></tr><tr><td style="text-align:left;">verify （验证）</td><td style="text-align:left;">运行任意的检查来验证项目包有效且达到质量标准。</td></tr><tr><td style="text-align:left;">install（安装）</td><td style="text-align:left;">安装项目包到本地仓库，这样项目包可以用作其他本地项目的依赖。</td></tr><tr><td style="text-align:left;">deploy（部署）</td><td style="text-align:left;">将最终的项目包复制到远程仓库中与其他开发者和项目共享。</td></tr></tbody></table>',2),S=n("p",null,[a("​ "),n("br")],-1),B={href:"https://maven.apache.org/ref/3.8.5/maven-core/lifecycles.html#site_Lifecycle",target:"_blank",rel:"noopener noreferrer"},N=n("p",null,"Maven Site 插件一般用来创建新的报告文档、部署站点等",-1),O=n("ul",null,[n("li",null,[n("p",null,"pre-site：执行一些需要在生成站点文档之前完成的工作")]),n("li",null,[n("p",null,"site：生成项目的站点文档")]),n("li",null,[n("p",null,"post-site： 执行一些需要在生成站点文档之后完成的工作，并且为部署做准备")]),n("li",null,[n("p",null,"site-deploy：将生成的站点文档部署到特定的服务器上")])],-1),D=e(`<br><h3 id="_2-maven常用命令" tabindex="-1"><a class="header-anchor" href="#_2-maven常用命令"><span>2. Maven常用命令</span></a></h3><p>每个命令都对应一个插件，执行命令实际是调用对应的插件来完成。</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token comment"># 执行命令的方式：</span>

<span class="token comment">-- 第一种: 找到项目对应的文件夹，然后打开cmd，输入指令，例如 mvn clean</span>

<span class="token comment">-- 第二种：打开idea的侧边栏，点开maven，找到lifecycle,双击指令</span>

<span class="token comment">-- 第三种：找到idea中下面的terimal控制栏，输入指令（要求idea使用管理员权限打开）</span>


在cmd下就可以管理项目，先切换到项目的根文件夹：

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p><strong>Maven常用命令</strong>：</p><ul><li><p><span style="color:red;font-size:文字大小;font-family:字体;"><strong>clean：可以帮助我们清除编译生成的target文件夹</strong></span></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>mvn clean
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li><li><p>validate：不常用。验证的意思，作用是帮助我们检查项目中的文件是否有错。</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>mvn validate
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li><li><p><span style="color:red;font-size:文字大小;font-family:字体;"><strong>compile：编译的意思。可以帮助我们去编译项目，这个很常用。</strong></span></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>mvn compile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li><li><p>test：其实就是测试的意思，可以帮助我们去运行项目中的测试类和测试方法。（src/test/java）</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>mvn test
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li><li><p><span style="color:red;font-size:文字大小;font-family:字体;"><strong>package：打包的意思，可以帮助我们把项目进行打包。打成（.jar 和.war）</strong></span></p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token comment">&lt;!-- 在pom.xml文件中，可以修改这个配置 --&gt;</span>
<span class="token comment">&lt;!-- 打包格式 默认为jar--&gt;</span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">&gt;</span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><p>​ <br></p><ul><li><p>verify：验证 的意思。其实就是去验证我们的jar包有没有问题</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>mvn verify
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li><li><p><span style="color:red;font-size:文字大小;font-family:字体;"><strong>install：安装的意思，其实就是把我们的jar包复制到本地仓库中去，根据坐标放置jar包。</strong></span></p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>mvn install
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><br></li><li><p>site：部署站点、 deploy：部署项目的意思。</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>mvn site
mvn deploy
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>site和deploy都是和项目部署相关的指令，可以帮助我们把本地仓库中的项目（jar包）推送到远程服务器，并且部署启动。</p><p>我们一般不使用maven来做项目的部署。在企业中，有专门的项目部署（运维）工具：jenkins和k8s（docker）</p></li></ul><br><p>有一些与 Maven 生命周期相关的重要概念需要说明：</p><p>当一个阶段通过 Maven 命令调用时，例如 mvn compile，只有该阶段之前以及包括该阶段在内的所有阶段会被执行。</p><p>这就是maven的对项目的自动构建。你执行deploy，编译、测试、打包、安装、部署都给你弄了。</p><br><h2 id="三-maven核心概念" tabindex="-1"><a class="header-anchor" href="#三-maven核心概念"><span>三 Maven核心概念</span></a></h2><h3 id="_1-maven坐标" tabindex="-1"><a class="header-anchor" href="#_1-maven坐标"><span>1. Maven坐标</span></a></h3><p>在 Maven 中，确定唯一的一个 jar 包也需要三个坐标， groupId、artifactId、version 三个信息。</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code> groupId：    当前的组织名称 (一般为公司域名的反转)
 artifactId： 当前项目的名称 
 version：    当前项目的当前版本
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_2-scope依赖范围" tabindex="-1"><a class="header-anchor" href="#_2-scope依赖范围"><span>2. Scope依赖范围</span></a></h3><p>scope：是指jar包的作用域</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.11<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>&lt;scope&gt;</code> 常用的值：</p><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token operator">-</span> compile：默认的作用域，默认可以省略。
  对于编译（src<span class="token operator">/</span>main<span class="token operator">/</span>java），测试<span class="token punctuation">(</span>src<span class="token operator">/</span>test<span class="token operator">/</span>java<span class="token punctuation">)</span>，运行<span class="token punctuation">(</span>运行时，target<span class="token operator">/</span>classes<span class="token punctuation">)</span>三种classpath都有效。

<span class="token operator">-</span> test：只对测试的classpath有效。
  什么叫做只对测试的classpath有效呢？  典型：junit
  意思就是只有在 src<span class="token operator">/</span>test<span class="token operator">/</span>java 路径下，才能找到这个作用域修饰的jar包下面的类和方法。

<span class="token operator">-</span> provided
  对于编译，测试的classpath有效，但是对于运行的classpath无效。
  典型：servlet<span class="token operator">-</span>api

<span class="token operator">-</span> runtime
  对于编译、测试的classpath无效，但是对于运行的classpath有效。
  典型：mysql<span class="token operator">-</span>connector<span class="token operator">-</span>java
  
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_3-依赖传递与冲突" tabindex="-1"><a class="header-anchor" href="#_3-依赖传递与冲突"><span>3. 依赖传递与冲突</span></a></h3><p>依赖具有传递性：</p><p>例如 <code> a-&gt;b（表示a依赖b），b-&gt;c</code>，根据依赖的传递性，就相当于a的依赖里面有c这个jar包</p><br><p>依赖冲突指的是当在同一个项目中，导入了同一个jar包的不同的版本，就会存在依赖冲突的问题</p><p>如何去解决依赖冲突的问题呢？</p><br><p>maven默认就有 声明有限原则 和 就近原则，如下：</p><p><strong>1. 声明优先原则</strong></p><figure><img src="`+g+'" alt="image-20220326143023757" tabindex="0" loading="lazy"><figcaption>image-20220326143023757</figcaption></figure><p>如上图所示，spring-beans和spring-core两个包生效的是声明在前面的一个版本</p><br><p><strong>2. 就近原则</strong></p><p>就近原则是指，谁依赖传递的次数越少，以谁为准</p><figure><img src="'+k+'" alt="image-20220326143727490" tabindex="0" loading="lazy"><figcaption>image-20220326143727490</figcaption></figure><figure><img src="'+m+`" alt="image-20220326144336583" tabindex="0" loading="lazy"><figcaption>image-20220326144336583</figcaption></figure><br><p>以上的声明优先原则和就近原则都是maven给我们提供的去解决依赖冲突的方式。这两种方式都是不太可靠的。</p><br><p><strong>3. 使用exclusion排除</strong></p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>5.3.16<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token comment">&lt;!-- 手动排除依赖  --&gt;</span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-beans<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><p><strong>4. 提取常量</strong></p><p>提取常量其实就是可以帮助我们把版本提取出来，方便我们管理jar包版本 ( 推荐使用 )</p><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring.version</span><span class="token punctuation">&gt;</span></span>5.3.4<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring.version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mysql.version</span><span class="token punctuation">&gt;</span></span>5.1.47<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mysql.version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">&gt;</span></span>

<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-context<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${spring.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>

    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>\${mysql.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="四-junit的使用" tabindex="-1"><a class="header-anchor" href="#四-junit的使用"><span>四 Junit的使用</span></a></h2><div class="language-xml line-numbers-mode" data-ext="xml" data-title="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>junit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>4.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">&gt;</span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_1-类名和方法规范" tabindex="-1"><a class="header-anchor" href="#_1-类名和方法规范"><span>1. 类名和方法规范</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 类名规范</span>

测试类的类名 必须是 <span class="token class-name">XXXTest</span> <span class="token punctuation">(</span>如：<span class="token class-name">UserTest</span>、<span class="token class-name">EmployeeTest</span><span class="token punctuation">)</span>
    
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 方法相关规范</span>

方法名必须叫做 <span class="token function">testXxx</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> 例如 <span class="token function">testSelectUserById</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

方法不能有参数，返回值必须是<span class="token keyword">void</span>、方法必须是<span class="token keyword">public</span>修饰的

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 使用示例</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		<span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h3 id="_2-junit常用注解" tabindex="-1"><a class="header-anchor" href="#_2-junit常用注解"><span>2. Junit常用注解</span></a></h3><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code>
<span class="token annotation punctuation">@Test</span>         <span class="token comment">// 修饰测试方法。</span>

<span class="token annotation punctuation">@Before</span>       <span class="token comment">// 在测试方法运行之前运行。</span>

<span class="token annotation punctuation">@After</span>        <span class="token comment">// 在测试方法运行之后运行。</span>

<span class="token annotation punctuation">@BeforeClass</span>  <span class="token comment">// 方法必须是静态的。在类加载的时候运行。</span>

<span class="token annotation punctuation">@AfterClass</span>   <span class="token comment">// 方法必须是静态的。在类被销毁的时候运行。</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><div class="language-java line-numbers-mode" data-ext="java" data-title="java"><pre class="language-java"><code><span class="token comment">// 注解示例：</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">AnnotationTest</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@BeforeClass</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">beforeClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;@BeforeClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Before</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">before</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;@Before&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMethod1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testMethod1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token annotation punctuation">@Test</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testMethod2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;testMethod2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@After</span>
    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">after</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;@After&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token annotation punctuation">@AfterClass</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">afterClass</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">&quot;@AfterClass&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>


<span class="token doc-comment comment">/** 输出:
@BeforeClass
@Before
testMethod1
@After
@Before
testMethod2
@After
@AfterClass

</span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,65);function L(V,H){const s=p("ExternalLinkIcon");return i(),c("div",null,[h,n("p",null,[a("官网下载地址："),n("a",f,[a("https://maven.apache.org/download.cgi"),t(s)])]),n("p",null,[a("Maven仓库地址："),n("a",x,[a("https://mvnrepository.com/"),t(s)])]),y,n("p",null,[a("阿里云云效 Maven地址："),n("a",_,[a("https://developer.aliyun.com/mvn/guide"),t(s)])]),M,n("p",null,[a("Maven Core – Lifecycles Reference："),n("a",j,[a("https://maven.apache.org/ref/3.8.5/maven-core/lifecycles.html"),t(s)])]),I,w,n("ul",null,[n("li",null,[n("p",null,[n("a",q,[a("clean Lifecycle"),t(s)]),a(" ：Clean 生命周期")]),A,T,E,z]),n("li",null,[n("p",null,[n("a",J,[a("default Lifecycle"),t(s)]),a(" ： Default (Build) 生命周期")]),C])]),S,n("ul",null,[n("li",null,[n("p",null,[n("a",B,[a("site Lifecycle"),t(s)]),a(" ：Site 生命周期")]),N,O])]),D])}const R=l(b,[["render",L],["__file","maven.html.vue"]]),$=JSON.parse('{"path":"/tool/maven.html","title":"Maven依赖管理","lang":"en-US","frontmatter":{"order":10,"title":"Maven依赖管理","shortTitle":"Maven依赖管理","icon":"maven","description":"一 Maven简介 Maven 翻译为\\"专家\\"、\\"内行\\"，是 Apache 下的一个纯 Java 开发的开源 项目。 Maven 是一个项目管理工具，可以对 Java 项目进行构建、依赖管理。 1. Maven的安装 官网下载地址：https://maven.apache.org/download.cgi Maven仓库地址：https://mvnre...","head":[["meta",{"property":"og:url","content":"https://x.app/notebook/tool/maven.html"}],["meta",{"property":"og:site_name","content":"Notebook"}],["meta",{"property":"og:title","content":"Maven依赖管理"}],["meta",{"property":"og:description","content":"一 Maven简介 Maven 翻译为\\"专家\\"、\\"内行\\"，是 Apache 下的一个纯 Java 开发的开源 项目。 Maven 是一个项目管理工具，可以对 Java 项目进行构建、依赖管理。 1. Maven的安装 官网下载地址：https://maven.apache.org/download.cgi Maven仓库地址：https://mvnre..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-15T09:06:58.000Z"}],["meta",{"property":"article:author","content":"Mr.Topple"}],["meta",{"property":"article:modified_time","content":"2024-04-15T09:06:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Maven依赖管理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-15T09:06:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Topple\\",\\"url\\":\\"https://www.baidu.com\\"}]}"]]},"headers":[{"level":2,"title":"一 Maven简介","slug":"一-maven简介","link":"#一-maven简介","children":[{"level":3,"title":"1. Maven的安装","slug":"_1-maven的安装","link":"#_1-maven的安装","children":[]},{"level":3,"title":"2. Maven仓库配置","slug":"_2-maven仓库配置","link":"#_2-maven仓库配置","children":[]},{"level":3,"title":"3. IDEA设置Maven","slug":"_3-idea设置maven","link":"#_3-idea设置maven","children":[]},{"level":3,"title":"4. 创建Maven项目","slug":"_4-创建maven项目","link":"#_4-创建maven项目","children":[]}]},{"level":2,"title":"二 Maven生命周期","slug":"二-maven生命周期","link":"#二-maven生命周期","children":[{"level":3,"title":"1. 生命周期与插件","slug":"_1-生命周期与插件","link":"#_1-生命周期与插件","children":[]},{"level":3,"title":"2. Maven常用命令","slug":"_2-maven常用命令","link":"#_2-maven常用命令","children":[]}]},{"level":2,"title":"三 Maven核心概念","slug":"三-maven核心概念","link":"#三-maven核心概念","children":[{"level":3,"title":"1. Maven坐标","slug":"_1-maven坐标","link":"#_1-maven坐标","children":[]},{"level":3,"title":"2. Scope依赖范围","slug":"_2-scope依赖范围","link":"#_2-scope依赖范围","children":[]},{"level":3,"title":"3. 依赖传递与冲突","slug":"_3-依赖传递与冲突","link":"#_3-依赖传递与冲突","children":[]}]},{"level":2,"title":"四 Junit的使用","slug":"四-junit的使用","link":"#四-junit的使用","children":[{"level":3,"title":"1. 类名和方法规范","slug":"_1-类名和方法规范","link":"#_1-类名和方法规范","children":[]},{"level":3,"title":"2. Junit常用注解","slug":"_2-junit常用注解","link":"#_2-junit常用注解","children":[]}]}],"git":{"createdTime":1713172018000,"updatedTime":1713172018000,"contributors":[{"name":"Neil","email":"msdrizzle@outlook.com","commits":1}]},"readingTime":{"minutes":9.57,"words":2871},"filePathRelative":"tool/maven.md","localizedDate":"April 15, 2024","autoDesc":true}');export{R as comp,$ as data};
