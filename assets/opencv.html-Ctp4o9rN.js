import{_ as p}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as c,c as i,b as n,d as s,a as t,e}from"./app-jNrY7xlS.js";const l={},u=n("h2",{id:"opencv快速上手",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#opencv快速上手"},[n("span",null,"OpenCV快速上手")])],-1),d=n("p",null,"OpenCV（Open Source Computer Vision Library）是一个开源的计算机视觉和图像处理库，提供了丰富的函数和工具，用于处理图像、视频和计算机视觉任务。OpenCV库支持多种编程语言，其中就包括Python。",-1),r=n("p",null,"下面是关于OpenCV库的详细信息：",-1),k={href:"https://opencv.org/",target:"_blank",rel:"noopener noreferrer"},m={href:"https://docs.opencv.org/5.x/d6/d00/tutorial_py_root.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://github.com/opencv/opencv",target:"_blank",rel:"noopener noreferrer"},b=e(`<h3 id="安装和使用示例" tabindex="-1"><a class="header-anchor" href="#安装和使用示例"><span>安装和使用示例</span></a></h3><p>安装OpenCV库：<br> 可以使用pip命令安装OpenCV库：</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pip <span class="token function">install</span> opencv-python <span class="token parameter variable">-i</span> https://pypi.tuna.tsinghua.edu.cn/simple
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>下面是OpenCV库的简单使用示例代码：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2

<span class="token comment"># 读取图像</span>
image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 显示图像</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Image&#39;</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 将图像转换为灰度图像</span>
gray_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>

<span class="token comment"># 保存灰度图像</span>
cv2<span class="token punctuation">.</span>imwrite<span class="token punctuation">(</span><span class="token string">&#39;gray_image.jpg&#39;</span><span class="token punctuation">,</span> gray_image<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上述示例代码展示了一些常见的OpenCV库的用法：</p><ol><li>使用<code>cv2.imread()</code>函数读取图像文件，并将图像存储为一个NumPy数组。</li><li>使用<code>cv2.imshow()</code>函数显示图像。这个函数创建一个窗口并在其中显示图像。<code>cv2.waitKey(0)</code>会等待用户按下任意键后关闭窗口。</li><li>使用<code>cv2.cvtColor()</code>函数将彩色图像转换为灰度图像。这个函数采用一个彩色图像数组和一个颜色转换参数作为输入，并返回一个灰度图像数组。</li><li>使用<code>cv2.imwrite()</code>函数将灰度图像保存为图像文件。</li></ol><p>以上只是OpenCV库的简单示例，该库还提供了许多其他功能，如图像处理、图像滤波、边缘检测、图像特征提取、目标检测、图像拼接、视频处理等。您可以参考OpenCV官方文档和示例代码，了解更多关于OpenCV库的详细用法和功能。</p><h3 id="默认通道顺序" tabindex="-1"><a class="header-anchor" href="#默认通道顺序"><span>默认通道顺序</span></a></h3><p>OpenCV库的默认通道顺序为BGR（蓝色、绿色、红色），与经常使用的RGB（红色、绿色、蓝色）顺序不同。这种差异起源于历史原因，主要有以下几个方面的考虑：</p><ol><li><p>兼容性：</p><ul><li>OpenCV最初是在Intel架构下开发的，而在Intel的处理器架构中，像素的字节顺序是BGR顺序。</li><li>为了保持与原始数据和其他软件的兼容性，OpenCV选择了BGR顺序作为默认通道顺序。</li></ul></li><li><p>与硬件的兼容性：</p><ul><li>在某些硬件和图像采集设备中，例如摄像机、摄像头等，也采用了BGR顺序。</li><li>通过在默认情况下使用BGR顺序，OpenCV可以更方便地与这些设备进行集成和交互。</li></ul></li><li><p>传统习惯：</p><ul><li>一些早期的计算机视觉库和软件工具采用了BGR顺序，而OpenCV的设计考虑了与这些传统工具的兼容性。</li><li>在某些领域，特别是在计算机视觉和图像处理领域，BGR顺序在一些算法和研究中被广泛使用。</li></ul></li></ol><p>虽然OpenCV的默认通道顺序是BGR，但它提供了函数和方法来进行颜色空间转换，如<code>cv2.cvtColor()</code>函数可以方便地在BGR和RGB之间进行转换。因此，可以根据需要在OpenCV中灵活地处理不同的颜色通道顺序。</p><p>对于一些常见的图像处理任务，如显示图像、保存图像等，可能需要注意默认通道顺序的差异，并在使用OpenCV时正确处理通道顺序以获得正确的结果。</p><div class="hint-container tip"><p class="hint-container-title">查看OpenCV（cv2）图像对象的通道类型和顺序</p><p>要查看OpenCV（cv2）图像对象的通道类型和顺序，可以使用<code>cv2.imshow()</code>函数显示图像，通过观察颜色来判断：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2

<span class="token comment"># 读取图像</span>
image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 显示图像</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Image&#39;</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><h3 id="基本图像数据信息" tabindex="-1"><a class="header-anchor" href="#基本图像数据信息"><span>基本图像数据信息</span></a></h3><p>在OpenCV中，<code>shape</code>是用于获取图像数据的维度和通道数的属性。它返回一个包含图像高度、宽度和通道数的元组。以下是对<code>shape</code>属性以及类似的常用属性和方法的详细解释：</p><ol><li><p><code>shape</code>属性：</p><ul><li><code>shape</code>属性用于获取图像数据的维度和通道数。</li><li>对于彩色图像，<code>shape</code>属性返回一个包含高度、宽度和通道数的元组，例如<code>(height, width, channels)</code>。</li><li>对于灰度图像，<code>shape</code>属性返回一个包含高度和宽度的元组，例如<code>(height, width)</code>。</li></ul></li><li><p>其他常用属性和方法：</p><ul><li><code>dtype</code>属性：获取图像数据的数据类型，例如<code>uint8</code>表示无符号8位整数。</li><li><code>size</code>属性：返回图像数据的总像素数，即高度乘以宽度。</li><li><code>ndim</code>属性：返回图像数据的维度数，对于灰度图像为2，对于彩色图像为3。</li><li><code>copy()</code>方法：创建图像数据的副本，可以对副本进行修改而不影响原始图像。</li><li><code>resize()</code>方法：调整图像的大小，可以指定新的尺寸和插值方法。</li></ul></li></ol><p>以下是一个示例代码，演示如何使用上述属性和方法：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2

<span class="token comment"># 读取图像</span>
image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 获取图像形状</span>
height<span class="token punctuation">,</span> width<span class="token punctuation">,</span> channels <span class="token operator">=</span> image<span class="token punctuation">.</span>shape
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;图像形状：&quot;</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> <span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> height<span class="token punctuation">,</span> <span class="token string">&quot;x&quot;</span><span class="token punctuation">,</span> channels<span class="token punctuation">)</span>

<span class="token comment"># 获取图像数据类型</span>
data_type <span class="token operator">=</span> image<span class="token punctuation">.</span>dtype
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;图像数据类型：&quot;</span><span class="token punctuation">,</span> data_type<span class="token punctuation">)</span>

<span class="token comment"># 获取图像总像素数</span>
total_pixels <span class="token operator">=</span> image<span class="token punctuation">.</span>size
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;图像总像素数：&quot;</span><span class="token punctuation">,</span> total_pixels<span class="token punctuation">)</span>

<span class="token comment"># 获取图像维度数</span>
num_dims <span class="token operator">=</span> image<span class="token punctuation">.</span>ndim
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;图像维度数：&quot;</span><span class="token punctuation">,</span> num_dims<span class="token punctuation">)</span>

<span class="token comment"># 创建图像数据的副本</span>
image_copy <span class="token operator">=</span> image<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 修改副本图像的一部分</span>
image_copy<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">:</span><span class="token number">200</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>  <span class="token comment"># 将一个区域设置为蓝色</span>

<span class="token comment"># 调整图像大小</span>
resized_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># 显示图像</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Original Image&#39;</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Copied Image&#39;</span><span class="token punctuation">,</span> image_copy<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Resized Image&#39;</span><span class="token punctuation">,</span> resized_image<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="图像对象的转换" tabindex="-1"><a class="header-anchor" href="#图像对象的转换"><span>图像对象的转换</span></a></h3><p>以下是OpenCV图像对象与其他常用图像对象之间的相互转换示例：</p><ol><li>OpenCV图像对象（cv2.Mat）与PIL图像对象之间的转换：</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">from</span> PIL <span class="token keyword">import</span> Image

<span class="token comment"># OpenCV图像对象转PIL图像对象</span>
cv_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">)</span>
pil_image <span class="token operator">=</span> Image<span class="token punctuation">.</span>fromarray<span class="token punctuation">(</span>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>cv_image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2RGB<span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># PIL图像对象转OpenCV图像对象</span>
pil_image <span class="token operator">=</span> Image<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">)</span>
cv_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>pil_image<span class="token punctuation">)</span><span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>OpenCV图像对象（cv2.Mat）与pywin32中的位图对象之间的转换：</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> win32gui
<span class="token keyword">import</span> win32ui
<span class="token keyword">import</span> win32con

<span class="token comment"># OpenCV图像对象转pywin32位图对象</span>
cv_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">)</span>
h<span class="token punctuation">,</span> w <span class="token operator">=</span> cv_image<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span>
bitmap <span class="token operator">=</span> win32ui<span class="token punctuation">.</span>CreateBitmap<span class="token punctuation">(</span><span class="token punctuation">)</span>
bitmap<span class="token punctuation">.</span>CreateCompatibleBitmap<span class="token punctuation">(</span>win32ui<span class="token punctuation">.</span>GetDC<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">,</span> w<span class="token punctuation">,</span> h<span class="token punctuation">)</span>
bitmap<span class="token punctuation">.</span>SetBitmapBits<span class="token punctuation">(</span>cv_image<span class="token punctuation">.</span>tobytes<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># pywin32位图对象转OpenCV图像对象</span>
hbitmap <span class="token operator">=</span> bitmap<span class="token punctuation">.</span>GetHandle<span class="token punctuation">(</span><span class="token punctuation">)</span>
np_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>win32gui<span class="token punctuation">.</span>GetObject<span class="token punctuation">(</span>hbitmap<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token punctuation">,</span> <span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">]</span>
cv_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>np_image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>OpenCV图像对象（cv2.Mat）与Numpy数组之间的转换：</li></ol><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np

<span class="token comment"># OpenCV图像对象转Numpy数组</span>
cv_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">)</span>
<span class="token comment"># 注意通道顺序，根据实际情况确认是否需要改变</span>
<span class="token comment"># image = cv2.cvtColor(cv_image, cv2.COLOR_BGR2RGB)  </span>
np_image <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span>cv_image<span class="token punctuation">)</span>    <span class="token comment"># 创建一个新的Numpy数组，将图像数据复制到新数组中</span>
np_image <span class="token operator">=</span> np<span class="token punctuation">.</span>asarray<span class="token punctuation">(</span>cv_image<span class="token punctuation">)</span>  <span class="token comment"># 与原始图像对象共享相同的内存</span>

<span class="token comment"># Numpy数组转OpenCV图像对象</span>
np_image <span class="token operator">=</span> np<span class="token punctuation">.</span>random<span class="token punctuation">.</span>randint<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">480</span><span class="token punctuation">,</span> <span class="token number">640</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
cv_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>np_image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_RGB2BGR<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>请注意，在进行图像对象之间的转换时，要确保图像的颜色通道顺序和数据类型匹配，以避免图像数据的损坏或不正确的转换结果。</p><h2 id="图像处理常用方法" tabindex="-1"><a class="header-anchor" href="#图像处理常用方法"><span>图像处理常用方法</span></a></h2><h3 id="颜色空间转换" tabindex="-1"><a class="header-anchor" href="#颜色空间转换"><span>颜色空间转换</span></a></h3><p><code>cv2.cvtColor()</code>是OpenCV中的一个函数，用于颜色空间转换（Color Space Conversion）。它可以将一幅图像从一个颜色空间转换为另一个颜色空间。下面是对<code>cv2.cvtColor()</code>方法的各个参数的解释：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>src<span class="token punctuation">,</span> code<span class="token punctuation">[</span><span class="token punctuation">,</span> dst<span class="token punctuation">[</span><span class="token punctuation">,</span> dstCn<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>src</code>：需要转换颜色空间的输入图像。</li><li><code>code</code>：指定颜色空间转换的类型。可以使用预定义的常量值或整数进行指定，例如<code>cv2.COLOR_BGR2RGB</code>。</li><li><code>dst</code>：可选参数，指定输出图像的目标存储。如果未指定，则函数会创建一个新的输出图像。</li><li><code>dstCn</code>：可选参数，指定输出图像的通道数。如果为0，则函数会根据<code>code</code>参数自动确定通道数。</li></ul><p>以下是一个示例代码，展示了如何使用<code>cv2.cvtColor()</code>将一张彩色图像从BGR颜色空间转换为灰度颜色空间：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2

<span class="token comment"># 读取图像</span>
image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 将图像从BGR转换为灰度</span>
gray_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_BGR2GRAY<span class="token punctuation">)</span>

<span class="token comment"># 显示原始图像和转换后的灰度图像</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Original Image&#39;</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Gray Image&#39;</span><span class="token punctuation">,</span> gray_image<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">Color Conversion Codes</p><p>在OpenCV的<code>cv2.cvtColor()</code>方法中，常用的颜色空间转换类型（Color Conversion Codes）包括：</p><ul><li><p>BGR ↔ Gray：</p><ul><li><code>cv2.COLOR_BGR2GRAY</code>：将BGR图像转换为灰度图像。</li><li><code>cv2.COLOR_GRAY2BGR</code>：将灰度图像转换为BGR图像。</li></ul></li><li><p>BGR ↔ RGB：</p><ul><li><code>cv2.COLOR_BGR2RGB</code>：将BGR图像转换为RGB图像。</li><li><code>cv2.COLOR_RGB2BGR</code>：将RGB图像转换为BGR图像。</li></ul></li><li><p>BGR ↔ HSV：</p><ul><li><code>cv2.COLOR_BGR2HSV</code>：将BGR图像转换为HSV图像。</li><li><code>cv2.COLOR_HSV2BGR</code>：将HSV图像转换为BGR图像。</li></ul></li><li><p>BGR ↔ HLS：</p><ul><li><code>cv2.COLOR_BGR2HLS</code>：将BGR图像转换为HLS图像。</li><li><code>cv2.COLOR_HLS2BGR</code>：将HLS图像转换为BGR图像。</li></ul></li><li><p>BGR ↔ Lab：</p><ul><li><code>cv2.COLOR_BGR2Lab</code>：将BGR图像转换为Lab图像。</li><li><code>cv2.COLOR_Lab2BGR</code>：将Lab图像转换为BGR图像。</li></ul></li><li><p>BGR ↔ YUV：</p><ul><li><code>cv2.COLOR_BGR2YUV</code>：将BGR图像转换为YUV图像。</li><li><code>cv2.COLOR_YUV2BGR</code>：将YUV图像转换为BGR图像。</li></ul></li></ul><p>这些是一些常用的颜色空间转换类型，您可以根据需要选择适当的转换类型。如果您需要其他转换类型，可以查阅OpenCV官方文档中的完整转换类型列表。</p></div>`,36),g={href:"https://docs.opencv.org/5.x/d8/d01/group__imgproc__color__conversions.html#ga397ae87e1288a81d2363b61574eb8cab",target:"_blank",rel:"noopener noreferrer"},h=e(`<h3 id="调整图像大小" tabindex="-1"><a class="header-anchor" href="#调整图像大小"><span>调整图像大小</span></a></h3><p>在OpenCV中，<code>resize()</code>是用于调整图像大小的方法，它可以根据指定的尺寸和插值方法对图像进行缩放。以下是对<code>resize()</code>方法以及各种插值方法的详细解释：</p><ol><li><p><code>resize()</code>方法：</p><ul><li><code>resize()</code>方法用于调整图像的大小，可以指定新的尺寸和插值方法。</li><li>语法：<code>cv2.resize(src, dsize[, dst[, fx[, fy[, interpolation]]]])</code></li><li><code>src</code>：原始图像，<mark>可以是<code>np.ndarray</code>或<code>cv2.Mat</code>对象</mark>。</li><li><code>dsize</code>：新的图像尺寸，可以是<code>(width, height)</code>元组或整数值。</li><li><code>fx</code>：水平方向的缩放因子。</li><li><code>fy</code>：垂直方向的缩放因子。</li><li><code>interpolation</code>：插值方法，用于指定调整图像大小时的像素值插值算法。</li></ul></li><li><p>插值方法：</p><ul><li>OpenCV提供了多种插值方法，用于确定调整图像大小时像素值的插值方式： <ul><li><code>cv2.INTER_NEAREST</code>：最近邻插值，使用离目标像素最近的像素值。</li><li><code>cv2.INTER_LINEAR</code>：双线性插值，使用目标像素周围的4个像素进行插值计算。</li><li><code>cv2.INTER_CUBIC</code>：双三次插值，使用目标像素周围的16个像素进行插值计算。</li><li><code>cv2.INTER_LANCZOS4</code>：Lanczos插值，使用目标像素周围的8个像素进行插值计算。</li></ul></li></ul></li></ol><p>以下是一个示例代码，演示如何使用<code>resize()</code>方法调整图像的大小，并使用不同的插值方法：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2

<span class="token comment"># 读取图像</span>
image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># 调整图像大小</span>
resized_nearest <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interpolation<span class="token operator">=</span>cv2<span class="token punctuation">.</span>INTER_NEAREST<span class="token punctuation">)</span>
resized_linear <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interpolation<span class="token operator">=</span>cv2<span class="token punctuation">.</span>INTER_LINEAR<span class="token punctuation">)</span>
resized_cubic <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interpolation<span class="token operator">=</span>cv2<span class="token punctuation">.</span>INTER_CUBIC<span class="token punctuation">)</span>
resized_lanczos <span class="token operator">=</span> cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>image<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interpolation<span class="token operator">=</span>cv2<span class="token punctuation">.</span>INTER_LANCZOS4<span class="token punctuation">)</span>

<span class="token comment"># 显示调整后的图像</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Original Image&#39;</span><span class="token punctuation">,</span> image<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Nearest Neighbor Interpolation&#39;</span><span class="token punctuation">,</span> resized_nearest<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Bilinear Interpolation&#39;</span><span class="token punctuation">,</span> resized_linear<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Bicubic Interpolation&#39;</span><span class="token punctuation">,</span> resized_cubic<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&#39;Lanczos Interpolation&#39;</span><span class="token punctuation">,</span> resized_lanczos<span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用OpenCV的<code>resize()</code>方法时，请确保了解不同插值方法的特性，并根据具体需求选择适当的插值方法来调整图像大小。</p><div class="hint-container tip"><p class="hint-container-title">OpenCV常用插值方式对比</p><p>在OpenCV中，<code>resize()</code>方法的默认插值方式是<code>cv2.INTER_LINEAR</code>，即双线性插值。</p><p>以下是对几种常见插值方法的特点对比，包括计算速度、内存占用、最终图像质量、PSNR（峰值信噪比）和 SSIM（结构相似性指数）等指标：</p><table><thead><tr><th>插值方法</th><th>计算速度</th><th>内存占用</th><th>图像质量</th><th>PSNR</th><th>SSIM</th></tr></thead><tbody><tr><td>最近邻插值</td><td>快</td><td>低</td><td>一般</td><td>低</td><td>低</td></tr><tr><td>双线性插值</td><td>快</td><td>低</td><td>较好</td><td>中等</td><td>中等</td></tr><tr><td>双三次插值</td><td>中等</td><td>中等</td><td>较好</td><td>较高</td><td>较高</td></tr><tr><td>Lanczos插值</td><td>慢</td><td>高</td><td>最好</td><td>较高</td><td>较高</td></tr></tbody></table><p>需要注意的是，不同的插值方法在不同的情况下可能会产生不同的结果。因此，最佳的插值方法选择应该基于具体的需求和实际情况进行评估和决策。</p></div>`,7),_={href:"https://docs.opencv.org/5.x/da/d54/group__imgproc__transform.html#ga47a974309e9102f5f08231edc7e7529d",target:"_blank",rel:"noopener noreferrer"},C=e(`<h3 id="图像模板匹配" tabindex="-1"><a class="header-anchor" href="#图像模板匹配"><span>图像模板匹配</span></a></h3><p>模板匹配是OpenCV中一个常用的图像处理技术，用于在图像中查找与给定模板最相似的图像区域。</p><p>OpenCV中的<code>matchTemplate</code>函数用于执行模板匹配。它采用输入图像和模板图像作为输入，并根据选择的匹配方法计算它们之间的相似度。</p><p>下面是对OpenCV中的<code>matchTemplate</code>方法进行详细介绍：</p><p><strong>1. matchTemplate方法的参数：</strong></p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code>cv2<span class="token punctuation">.</span>matchTemplate<span class="token punctuation">(</span>image<span class="token punctuation">,</span> templ<span class="token punctuation">,</span> method<span class="token punctuation">[</span><span class="token punctuation">,</span> result<span class="token punctuation">[</span><span class="token punctuation">,</span> mask<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li><code>image</code>：待搜索的输入图像（大图像）。</li><li><code>templ</code>：模板图像（小图像），用于在输入图像中进行匹配。</li><li><code>method</code>：匹配方法，指定匹配算法。</li><li><code>result</code>：可选参数，用于存储匹配结果的输出图像。</li><li><code>mask</code>：可选参数，指定感兴趣区域（ROI）。</li></ul><p><strong>2. 返回值解析：</strong></p><p><code>matchTemplate</code>方法返回一个结果图像，其中每个像素值表示该位置的匹配程度。可以使用<code>minMaxLoc</code>函数找到结果图像中的最大匹配值和位置。</p><p><strong>3. 不同匹配方法的特点：</strong></p><ul><li><code>cv2.TM_SQDIFF</code>：平方差匹配，计算模板和图像区域之间的像素差的平方和。</li><li><code>cv2.TM_SQDIFF_NORMED</code>：归一化平方差匹配，计算归一化的平方差。</li><li><code>cv2.TM_CCORR</code>：互相关匹配，计算模板和图像区域之间的互相关。</li><li><code>cv2.TM_CCORR_NORMED</code>：归一化互相关匹配，计算归一化的互相关。</li><li><code>cv2.TM_CCOEFF</code>：归一化相关系数匹配，计算归一化的相关系数。</li><li><code>cv2.TM_CCOEFF_NORMED</code>：归一化相关系数匹配，计算归一化的相关系数。</li></ul><table><thead><tr><th>算法</th><th>执行效率</th><th>内存占用</th><th>推荐颜色空间</th><th>最佳匹配</th></tr></thead><tbody><tr><td>TM_SQDIFF</td><td>较高</td><td>较低</td><td>灰度图像</td><td>最小值</td></tr><tr><td>TM_SQDIFF_NORMED</td><td>低</td><td>较低</td><td>灰度图像</td><td>最小值</td></tr><tr><td>TM_CCORR</td><td>中等</td><td>较高</td><td>灰度图像或彩色图像</td><td>最大值</td></tr><tr><td>TM_CCORR_NORMED</td><td>低</td><td>较高</td><td>灰度图像或彩色图像</td><td>最大值</td></tr><tr><td>TM_CCOEFF</td><td>中等</td><td>较高</td><td>灰度图像或彩色图像</td><td>最大值</td></tr><tr><td>TM_CCOEFF_NORMED</td><td>低</td><td>较高</td><td>灰度图像或彩色图像</td><td>最大值</td></tr></tbody></table><div class="hint-container tip"><p class="hint-container-title">注意事项</p><ul><li>执行效率：不同算法的执行效率可能因具体实现和图像尺寸而有所差异，一般而言，<code>TM_SQDIFF</code>和<code>TM_CCORR</code>的执行效率较高，<code>TM_SQDIFF_NORMED</code>和<code>TM_CCORR_NORMED</code>的执行效率较低，<code>TM_CCOEFF</code>和<code>TM_CCOEFF_NORMED</code>的执行效率居中。</li><li>内存占用：不同算法的内存占用可能会有所差异，但一般而言，使用彩色图像进行匹配的算法（如<code>TM_CCORR</code>、<code>TM_CCORR_NORMED</code>、<code>TM_CCOEFF</code>和<code>TM_CCOEFF_NORMED</code>）可能需要更多的内存。</li><li>推荐颜色空间：对于灰度图像，可以使用任何算法进行匹配。对于彩色图像，可以使用<code>TM_CCORR</code>、<code>TM_CCORR_NORMED</code>、<code>TM_CCOEFF</code>和<code>TM_CCOEFF_NORMED</code>进行匹配。</li><li>最佳匹配：对于<code>TM_SQDIFF</code>和<code>TM_SQDIFF_NORMED</code>，最小值表示最佳匹配；对于<code>TM_CCORR</code>、<code>TM_CCORR_NORMED</code>、<code>TM_CCOEFF</code>和<code>TM_CCOEFF_NORMED</code>，最大值表示最佳匹配。</li><li>使用场景：不同算法适用于不同的使用场景，<code>TM_SQDIFF</code>和<code>TM_SQDIFF_NORMED</code>适用于目标定位和模板识别，<code>TM_CCORR</code>、<code>TM_CCORR_NORMED</code>、<code>TM_CCOEFF</code>和<code>TM_CCOEFF_NORMED</code>适用于模板匹配和目标跟踪。</li></ul></div><p>使用<code>matchTemplate</code>方法时，根据实际情况选择合适的匹配方法，并根据具体需求调整阈值和后处理操作，以获得最佳的匹配结果。</p><p><strong>3. 代码示例：</strong></p><p>以下是一个使用彩色图像进行模板匹配的代码示例：</p><div class="language-python line-numbers-mode" data-ext="py" data-title="py"><pre class="language-python"><code><span class="token keyword">import</span> cv2

<span class="token keyword">def</span> <span class="token function">template_matching_color</span><span class="token punctuation">(</span>image<span class="token punctuation">,</span> template<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># 将图像转换为彩色图像</span>
    img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>image<span class="token punctuation">)</span>
    template_img <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imread<span class="token punctuation">(</span>template<span class="token punctuation">)</span>

    <span class="token comment"># 执行模板匹配</span>
    result <span class="token operator">=</span> cv2<span class="token punctuation">.</span>matchTemplate<span class="token punctuation">(</span>img<span class="token punctuation">,</span> template_img<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>TM_CCOEFF_NORMED<span class="token punctuation">)</span>

    <span class="token comment"># 获取最佳匹配结果</span>
    min_val<span class="token punctuation">,</span> max_val<span class="token punctuation">,</span> min_loc<span class="token punctuation">,</span> max_loc <span class="token operator">=</span> cv2<span class="token punctuation">.</span>minMaxLoc<span class="token punctuation">(</span>result<span class="token punctuation">)</span>
    top_left <span class="token operator">=</span> max_loc
    bottom_right <span class="token operator">=</span> <span class="token punctuation">(</span>top_left<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> template_img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> top_left<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> template_img<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment"># 在图像中绘制矩形框</span>
    cv2<span class="token punctuation">.</span>rectangle<span class="token punctuation">(</span>img<span class="token punctuation">,</span> top_left<span class="token punctuation">,</span> bottom_right<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>

    <span class="token comment"># 显示结果图像</span>
    cv2<span class="token punctuation">.</span>imshow<span class="token punctuation">(</span><span class="token string">&quot;Matched Image&quot;</span><span class="token punctuation">,</span> img<span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>waitKey<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>
    cv2<span class="token punctuation">.</span>destroyAllWindows<span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment"># 调用函数进行模板匹配</span>
template_matching_color<span class="token punctuation">(</span><span class="token string">&#39;image.jpg&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;template.jpg&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,17);function O(R,y){const a=o("ExternalLinkIcon");return c(),i("div",null,[u,d,r,n("ol",null,[n("li",null,[s("官方网站："),n("a",k,[s("https://opencv.org/"),t(a)])]),n("li",null,[s("官方教程地址："),n("a",m,[s("https://docs.opencv.org/5.x/d6/d00/tutorial_py_root.html"),t(a)])]),n("li",null,[s("官方GitHub仓库："),n("a",v,[s("https://github.com/opencv/opencv"),t(a)])])]),b,n("p",null,[s("对于更详细的文档和 ColorConversionCodes，请参考OpenCV的官方文档："),n("a",g,[s("cv::cvtColor()"),t(a)])]),h,n("p",null,[s("对于更详细的文档和更多插值方法，请参考OpenCV的官方文档："),n("a",_,[s("cv::resize()"),t(a)])]),C])}const G=p(l,[["render",O],["__file","opencv.html.vue"]]),w=JSON.parse('{"path":"/python/Project/image/opencv.html","title":"OpenCV图像处理","lang":"en-US","frontmatter":{"order":9,"title":"OpenCV图像处理","icon":"flex","description":"OpenCV快速上手 OpenCV（Open Source Computer Vision Library）是一个开源的计算机视觉和图像处理库，提供了丰富的函数和工具，用于处理图像、视频和计算机视觉任务。OpenCV库支持多种编程语言，其中就包括Python。 下面是关于OpenCV库的详细信息： 官方网站：https://opencv.org/ 官方...","head":[["meta",{"property":"og:url","content":"https://x.app/notebook/python/Project/image/opencv.html"}],["meta",{"property":"og:site_name","content":"Notebook"}],["meta",{"property":"og:title","content":"OpenCV图像处理"}],["meta",{"property":"og:description","content":"OpenCV快速上手 OpenCV（Open Source Computer Vision Library）是一个开源的计算机视觉和图像处理库，提供了丰富的函数和工具，用于处理图像、视频和计算机视觉任务。OpenCV库支持多种编程语言，其中就包括Python。 下面是关于OpenCV库的详细信息： 官方网站：https://opencv.org/ 官方..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-04-03T10:40:35.000Z"}],["meta",{"property":"article:author","content":"Mr.Topple"}],["meta",{"property":"article:modified_time","content":"2024-04-03T10:40:35.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OpenCV图像处理\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-04-03T10:40:35.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Mr.Topple\\",\\"url\\":\\"https://www.baidu.com\\"}]}"]]},"headers":[{"level":2,"title":"OpenCV快速上手","slug":"opencv快速上手","link":"#opencv快速上手","children":[{"level":3,"title":"安装和使用示例","slug":"安装和使用示例","link":"#安装和使用示例","children":[]},{"level":3,"title":"默认通道顺序","slug":"默认通道顺序","link":"#默认通道顺序","children":[]},{"level":3,"title":"基本图像数据信息","slug":"基本图像数据信息","link":"#基本图像数据信息","children":[]},{"level":3,"title":"图像对象的转换","slug":"图像对象的转换","link":"#图像对象的转换","children":[]}]},{"level":2,"title":"图像处理常用方法","slug":"图像处理常用方法","link":"#图像处理常用方法","children":[{"level":3,"title":"颜色空间转换","slug":"颜色空间转换","link":"#颜色空间转换","children":[]},{"level":3,"title":"调整图像大小","slug":"调整图像大小","link":"#调整图像大小","children":[]},{"level":3,"title":"图像模板匹配","slug":"图像模板匹配","link":"#图像模板匹配","children":[]}]}],"git":{"createdTime":1712140835000,"updatedTime":1712140835000,"contributors":[{"name":"Neil","email":"msdrizzle@outlook.com","commits":1}]},"readingTime":{"minutes":13.1,"words":3931},"filePathRelative":"python/Project/image/opencv.md","localizedDate":"April 3, 2024","autoDesc":true}');export{G as comp,w as data};
